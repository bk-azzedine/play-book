{"version":3,"file":"spartan-ng-brain-slider.mjs","sources":["../../../../libs/brain/slider/src/lib/brn-slider-track.directive.ts","../../../../libs/brain/slider/src/lib/brn-slider-thumb.directive.ts","../../../../libs/brain/slider/src/lib/brn-slider-tick-mark.directive.ts","../../../../libs/brain/slider/src/lib/brn-slider-track-active-fill.directive.ts","../../../../libs/brain/slider/src/index.ts","../../../../libs/brain/slider/src/spartan-ng-brain-slider.ts"],"sourcesContent":["import type { Direction } from '@angular/cdk/bidi';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SharedResizeObserver } from '@angular/cdk/observers/private';\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n\ttype AfterViewInit,\n\tChangeDetectorRef,\n\tDirective,\n\tElementRef,\n\tInjectionToken,\n\tInjector,\n\ttype OnDestroy,\n\tPLATFORM_ID,\n\tRenderer2,\n\ttype Signal,\n\ttype WritableSignal,\n\tcomputed,\n\tcontentChild,\n\teffect,\n\tforwardRef,\n\tinject,\n\tinput,\n\tmodel,\n\tsignal,\n\tuntracked,\n} from '@angular/core';\nimport { toObservable } from '@angular/core/rxjs-interop';\nimport { type ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport type { BrnLabelDirective } from '@spartan-ng/brain/label';\nimport { Subject, merge } from 'rxjs';\nimport { debounceTime, takeUntil, tap } from 'rxjs/operators';\n\nexport const BRN_SLIDER_INPUT = new InjectionToken<BrnSliderInput>('BrnSliderInput');\n\nexport interface BrnSliderInput {\n\t/** The slider's native input element wrapper value. */\n\tvalue: Signal<number>;\n\n\t/** Flag indicating if native input element is currently focused. */\n\tisFocused: Signal<boolean>;\n}\n\nexport const BRN_SLIDER_TRACK = new InjectionToken<BrnSliderTrack>('BrnSliderTrack');\n\nexport const BRN_SLIDER = new InjectionToken<BrnSlider>('BrnSlider');\n\nexport interface BrnSlider {\n\t/** The minimun value of the slider. */\n\tmin: WritableSignal<number>;\n\n\t/** The maximun value of the slider. */\n\tmax: WritableSignal<number>;\n\n\t/** The amount that slider values can increment or decrement by. */\n\tstep: Signal<number>;\n\n\t/** Whether the slider is disabled. */\n\tdisabled: WritableSignal<boolean>;\n\n\t/** Whether the slider displays tick marks along the slider track. */\n\tshowTickMarks: Signal<boolean>;\n\n\t/** Whether the slider is ltr or rtl.\n\t * Any consumer of slider interested in getting the current\n\t * direction state, will consume this signal.\n\t */\n\tdirection: Signal<Direction>;\n\n\t/** The underlying slider's track element */\n\tbrnSliderTrack: Signal<BrnSliderTrack | undefined>;\n\n\t/** The aria-labelledby element */\n\tlabel: Signal<BrnLabelDirective | null>;\n\n\t/** The optional aria-label fallback value.\n\t * If no label is provided, this input must be provided by the user,\n\t * otherwise an error will be displayed prompting the user to either\n\t * provide a spartan-ui label or a fallback aria label text.\n\t */\n\tariaLabel: Signal<string | null>;\n}\n\n/**\n * Directive that adds slider-specific behaviors to an input element inside `<brn-slider>`.\n */\n@Directive({\n\tselector: 'input[brnSliderInput]',\n\thost: {\n\t\ttype: 'range',\n\t\trole: 'slider',\n\t\t'(change)': 'onChange()',\n\t\t'(input)': 'onInput()',\n\t\t'(focus)': 'onFocus()',\n\t\t'(blur)': 'onBlur()',\n\t\t'[attr.disabled]': 'isDisabled()',\n\t\t'[attr.aria-valuenow]': 'valueNow()',\n\t\t'[attr.aria-valuemin]': 'valueMin()',\n\t\t'[attr.aria-valuemax]': 'valueMax()',\n\t\t'[attr.aria-labelledby]': 'ariaLabelledby()',\n\t\t'[attr.aria-label]': 'ariaLabel()',\n\t\t'aria-orientation': 'horizontal',\n\t},\n\tproviders: [\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\tuseExisting: BrnSliderInputDirective,\n\t\t\tmulti: true,\n\t\t},\n\t\t{\n\t\t\tprovide: BRN_SLIDER_INPUT,\n\t\t\tuseExisting: BrnSliderInputDirective,\n\t\t},\n\t],\n\tstandalone: true,\n})\nexport class BrnSliderInputDirective implements ControlValueAccessor, BrnSliderInput {\n\tprivate _onChangeFn: ((value: string | number) => void) | undefined;\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\tprivate _onTouchedFn: () => void = () => {};\n\tprotected isDisabled = computed(() => (this._slider.disabled() === true ? true : undefined));\n\tprotected valueNow = computed(() => this.value() ?? 0);\n\tprotected valueMin = computed(() => this._slider.min());\n\tprotected valueMax = computed(() => this._slider.max());\n\tprotected ariaLabelledby = computed(() => this._slider.label()?.id);\n\tprotected ariaLabel = computed(() => {\n\t\tif (!this._slider.ariaLabel() && !this.ariaLabelledby()) {\n\t\t\tthrow new Error(\n\t\t\t\t\"'ariaLabel' input must be provided as fallback accessibility aria label when no aria-labelledby element is provided.\",\n\t\t\t);\n\t\t}\n\t\treturn this._slider.ariaLabel();\n\t});\n\tpublic readonly value = signal(0);\n\tpublic readonly isFocused = signal(false);\n\n\tprivate readonly _platformId = inject(PLATFORM_ID);\n\tprivate readonly _elementRef = inject<ElementRef<HTMLInputElement>>(ElementRef<HTMLInputElement>);\n\tprivate readonly _slider = inject(BRN_SLIDER);\n\tprivate readonly _renderer2 = inject(Renderer2);\n\tprivate readonly _changeDetector = inject(ChangeDetectorRef);\n\n\tconstructor() {\n\t\teffect(() => {\n\t\t\tif (isPlatformBrowser(this._platformId)) {\n\t\t\t\tconst step = this._slider.step();\n\t\t\t\tconst min = this._slider.min();\n\t\t\t\tconst max = this._slider.max();\n\t\t\t\tconst direction = this._slider.direction();\n\t\t\t\tuntracked(() => {\n\t\t\t\t\tthis._updateHostElementStep(step);\n\t\t\t\t\tthis._updateMinValue(min);\n\t\t\t\t\tthis._updateMaxValue(max);\n\t\t\t\t\tthis._updateDirection(direction);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tonFocus(): void {\n\t\tthis.isFocused.set(true);\n\t}\n\n\tonBlur(): void {\n\t\tthis.isFocused.set(false);\n\t\tthis._onTouchedFn();\n\t}\n\n\tonInput(): void {\n\t\tthis._updateValue();\n\t}\n\n\tonChange(): void {\n\t\tthis._updateValue();\n\t}\n\n\twriteValue(obj: number): void {\n\t\tthis.value.set(obj);\n\t\tthis._updateHostElementValue(obj);\n\t}\n\n\tregisterOnChange(fn: (value: string | number) => void): void {\n\t\tthis._onChangeFn = fn;\n\t}\n\n\tregisterOnTouched(fn: () => void): void {\n\t\tthis._onTouchedFn = fn;\n\t}\n\n\t/**\n\t * Sets the disabled state of the slider.\n\t * @param isDisabled The new disabled state\n\t */\n\tsetDisabledState(isDisabled: boolean): void {\n\t\t/** Disable slider only when slider component\n\t\t * is not disabled and isDisabled param is explicitly set to true\n\t\t */\n\t\tif (isDisabled && !this._slider.disabled()) {\n\t\t\tthis._slider.disabled.set(isDisabled);\n\t\t}\n\t}\n\n\tprivate _updateHostElementValue(value: number | null) {\n\t\tthis._elementRef.nativeElement.value = value?.toString() ?? '0';\n\t\tthis._changeDetector.detectChanges();\n\t}\n\n\tprivate _updateValue() {\n\t\tthis.value.set(this._elementRef.nativeElement.valueAsNumber);\n\t\tthis._onChangeFn?.(this.value());\n\t}\n\n\tprivate _updateHostElementStep(step: number) {\n\t\tthis._elementRef.nativeElement.step = step.toString();\n\t\tthis._updateValue();\n\t}\n\n\tprivate _updateMinValue(value: number) {\n\t\tthis._elementRef.nativeElement.min = value.toString();\n\t\tthis._updateValue();\n\t}\n\n\tprivate _updateMaxValue(value: number) {\n\t\tthis._elementRef.nativeElement.max = value.toString();\n\t\tthis._updateValue();\n\t}\n\n\tprivate _updateDirection(direction: Direction) {\n\t\tthis._renderer2.setStyle(this._elementRef.nativeElement, 'direction', direction);\n\t}\n}\n\n@Directive({\n\tselector: '[brnSlider]',\n\tstandalone: true,\n\tproviders: [\n\t\t{\n\t\t\tprovide: BRN_SLIDER,\n\t\t\tuseExisting: BrnSliderDirective,\n\t\t},\n\t],\n\texportAs: 'brnSlider',\n})\nexport class BrnSliderDirective implements BrnSlider, AfterViewInit, OnDestroy {\n\tpublic readonly label = input<BrnLabelDirective | null>(null);\n\tpublic readonly ariaLabel = input<string | null>(null);\n\t/** Used only as an input. */\n\tpublic readonly dir = input<Direction>('ltr');\n\tpublic readonly disabled = model<boolean>(false, { alias: 'brnSliderDisabled' });\n\tpublic readonly min = model<number>(0);\n\tpublic readonly max = model<number>(100);\n\tpublic readonly step = input<number>(1);\n\tpublic readonly showTickMarks = input<boolean>(false);\n\n\tpublic readonly direction = signal<Direction>('ltr');\n\tprivate readonly _destroyed = new Subject<void>();\n\n\tprivate readonly _injector = inject(Injector);\n\tprivate readonly _dir = inject(Directionality);\n\tprivate readonly _platformId = inject(PLATFORM_ID);\n\n\tpublic readonly brnSliderTrack = contentChild(BRN_SLIDER_TRACK);\n\n\tngAfterViewInit(): void {\n\t\tif (isPlatformBrowser(this._platformId)) {\n\t\t\tthis._updateDirectionality();\n\t\t}\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis._destroyed.next();\n\t\tthis._destroyed.complete();\n\t}\n\n\t/**\n\t * The method is responsible of setting the current direction state\n\t * based on the latest 'dir' input or bidi state change. The only\n\t * source of truth for slider direction state is the 'direction' signal\n\t * and all interested consumers of it, will consume this interface exposed signal.\n\t */\n\tprivate _updateDirectionality() {\n\t\tmerge(toObservable(this.dir, { injector: this._injector }), this._dir.change)\n\t\t\t.pipe(\n\t\t\t\ttakeUntil(this._destroyed),\n\t\t\t\ttap((dir) => this.direction.set(dir)),\n\t\t\t)\n\t\t\t.subscribe();\n\t}\n}\n\nexport interface BrnSliderTrack {\n\t/** The track's active portion. */\n\tactiveTrackPercentage: Signal<number>;\n\n\t/** The host element's bounding client rect width without padding left and right. */\n\thostElementWidth: Signal<number>;\n\n\t/** The available tick mark track width based on slider's step min and max values. */\n\ttickMarkTrackWidth: Signal<number>;\n\n\t/** The tick marks array indicating if a mark is currently active or inactive. */\n\ttickMarks: Signal<Array<boolean>>;\n\n\t/** The underlying slider's track input element */\n\tbrnSliderInput: Signal<BrnSliderInput | undefined>;\n}\n\n@Directive({\n\tselector: '[brnSliderTrack]',\n\tstandalone: true,\n\tproviders: [\n\t\t{\n\t\t\tprovide: BRN_SLIDER_TRACK,\n\t\t\tuseExisting: BrnSliderTrackDirective,\n\t\t},\n\t],\n})\nexport class BrnSliderTrackDirective implements BrnSliderTrack, AfterViewInit, OnDestroy {\n\tpublic readonly hostElementWidth = signal<number>(0);\n\tprivate readonly _destroyed = new Subject<void>();\n\n\tprivate readonly _slider = inject(BRN_SLIDER);\n\tprivate readonly _platformId = inject(PLATFORM_ID);\n\tprivate readonly _elementRef = inject<ElementRef<HTMLElement>>(ElementRef<HTMLElement>);\n\tprivate readonly _sharedResizeObserver = inject(SharedResizeObserver);\n\n\tpublic readonly brnSliderInput = contentChild<BrnSliderInput>(forwardRef(() => BRN_SLIDER_INPUT));\n\n\tpublic activeTrackPercentage = computed(() => {\n\t\tconst inputValue = this.brnSliderInput()?.value();\n\n\t\tif (this._slider.min() >= this._slider.max() || !inputValue || inputValue < this._slider.min()) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (inputValue > this._slider.max()) {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn (inputValue - this._slider.min()) / (this._slider.max() - this._slider.min());\n\t});\n\n\tpublic tickMarkTrackWidth = computed(() => {\n\t\tif (!this._slider.showTickMarks()) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tconst sliderStep = this._slider.step();\n\t\tconst sliderMax = this._slider.max();\n\t\tconst sliderMin = this._slider.min();\n\n\t\tconst step = sliderStep && sliderStep > 0 ? sliderStep : 1;\n\t\tconst maxValue = Math.floor((sliderMax - sliderMin) / step) * step + sliderMin;\n\t\tconst percentage = (maxValue - sliderMin) / (sliderMax - sliderMin);\n\n\t\treturn this.hostElementWidth() * percentage;\n\t});\n\n\tpublic tickMarks = computed(() => {\n\t\tconst inputValue = this.brnSliderInput()?.value();\n\n\t\tif (!this._slider.showTickMarks() || inputValue === null || inputValue === undefined) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet numActive = Math.max(Math.floor((inputValue - this._slider.min()) / this._slider.step()), 0);\n\t\tlet numInactive = Math.max(Math.floor((this._slider.max() - inputValue) / this._slider.step()), 0);\n\n\t\tthis._slider.direction() === 'rtl' ? numInactive++ : numActive++;\n\n\t\treturn Array(numActive).fill(true).concat(Array(numInactive).fill(false));\n\t});\n\n\tngAfterViewInit(): void {\n\t\tif (isPlatformBrowser(this._platformId)) {\n\t\t\tthis._storeDimensions();\n\t\t\tthis._onResize();\n\t\t}\n\t}\n\n\tngOnDestroy(): void {\n\t\tthis._destroyed.next();\n\t\tthis._destroyed.complete();\n\t}\n\n\tprivate _onResize() {\n\t\tthis._sharedResizeObserver\n\t\t\t.observe(this._elementRef.nativeElement)\n\t\t\t.pipe(\n\t\t\t\tdebounceTime(32),\n\t\t\t\ttakeUntil(this._destroyed),\n\t\t\t\ttap(() => this._storeDimensions()),\n\t\t\t)\n\t\t\t.subscribe();\n\t}\n\n\tprivate _storeDimensions(): void {\n\t\tconst computedStyle = getComputedStyle(this._elementRef.nativeElement);\n\n\t\tthis.hostElementWidth.set(\n\t\t\tthis._elementRef.nativeElement.offsetWidth -\n\t\t\t\tNumber.parseFloat(computedStyle.paddingLeft) -\n\t\t\t\tNumber.parseFloat(computedStyle.paddingRight),\n\t\t);\n\t}\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { Directive, ElementRef, PLATFORM_ID, type Signal, computed, effect, inject } from '@angular/core';\nimport { BRN_SLIDER } from './brn-slider-track.directive';\n\nexport interface BrnSliderThumb {\n\t/** The visual's thumb translateX portion. */\n\ttranslateX: Signal<number>;\n}\n\n@Directive({\n\tselector: '[brnSliderThumb]',\n\tstandalone: true,\n})\nexport class BrnSliderThumbDirective implements BrnSliderThumb {\n\tprivate readonly _platformId = inject(PLATFORM_ID);\n\tprivate readonly _elementRef = inject<ElementRef<HTMLElement>>(ElementRef<HTMLElement>);\n\tprivate readonly _slider = inject(BRN_SLIDER);\n\n\tpublic readonly translateX = computed(() => this._calcTranslateX());\n\n\tconstructor() {\n\t\teffect(() => {\n\t\t\tif (isPlatformBrowser(this._platformId)) {\n\t\t\t\tthis._updateTranslateX(this.translateX());\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _calcTranslateX() {\n\t\tconst activeTrackPercentage = this._slider.brnSliderTrack()?.activeTrackPercentage();\n\t\tconst trackHostElementWidth = this._slider.brnSliderTrack()?.hostElementWidth();\n\n\t\tif (!activeTrackPercentage || !trackHostElementWidth) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tif (this._slider.direction() === 'rtl') {\n\t\t\treturn -(activeTrackPercentage * trackHostElementWidth);\n\t\t}\n\n\t\treturn activeTrackPercentage * trackHostElementWidth;\n\t}\n\n\tprivate _updateTranslateX(value: number) {\n\t\tthis._elementRef.nativeElement.style.transform = `translate(${value}px, -50%)`;\n\t}\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { Directive, ElementRef, PLATFORM_ID, effect, inject, input } from '@angular/core';\nimport { BRN_SLIDER, BRN_SLIDER_TRACK } from './brn-slider-track.directive';\n\n@Directive({\n\tselector: '[brnSliderTickMark]',\n\tstandalone: true,\n})\nexport class BrnSliderTickMarkDirective {\n\tprivate readonly _platformId = inject(PLATFORM_ID);\n\tpublic readonly data = input<{ tickMarkIndex: number; totalTickMarks: number }>();\n\n\tprivate readonly _sliderTrack = inject(BRN_SLIDER_TRACK);\n\tprivate readonly _elementRef = inject<ElementRef<HTMLElement>>(ElementRef<HTMLElement>);\n\tprivate readonly _slider = inject(BRN_SLIDER);\n\n\tconstructor() {\n\t\teffect(() => {\n\t\t\tif (isPlatformBrowser(this._platformId)) {\n\t\t\t\tthis._updateTranslateX();\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _updateTranslateX() {\n\t\tconst data = this.data();\n\n\t\tif (!data) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst translateX = data.tickMarkIndex * (this._sliderTrack.tickMarkTrackWidth() / (data.totalTickMarks - 1));\n\n\t\tthis._elementRef.nativeElement.style.transform =\n\t\t\tthis._slider.direction() === 'rtl' ? `translateX(${-translateX}px)` : `translateX(${translateX}px)`;\n\t}\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { Directive, ElementRef, PLATFORM_ID, effect, inject } from '@angular/core';\nimport { BRN_SLIDER_TRACK } from './brn-slider-track.directive';\n\n@Directive({\n\tselector: '[brnSliderTrackActiveFill]',\n\tstandalone: true,\n})\nexport class BrnSliderTrackActiveFillDirective {\n\tprivate readonly _platformId = inject(PLATFORM_ID);\n\tprivate readonly _elementRef = inject<ElementRef<HTMLElement>>(ElementRef<HTMLElement>);\n\tprivate readonly _sliderTrack = inject(BRN_SLIDER_TRACK);\n\n\tconstructor() {\n\t\teffect(() => {\n\t\t\tif (isPlatformBrowser(this._platformId)) {\n\t\t\t\tthis._updateActiveTrackPercentage(this._sliderTrack.activeTrackPercentage());\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _updateActiveTrackPercentage(percentage: number) {\n\t\tthis._elementRef.nativeElement.style.transform = `scaleX(${percentage})`;\n\t}\n}\n","import { BrnSliderThumbDirective } from './lib/brn-slider-thumb.directive';\nimport { BrnSliderDirective, BrnSliderInputDirective, BrnSliderTrackDirective } from './lib/brn-slider-track.directive';\n\nexport * from './lib/brn-slider-thumb.directive';\nexport * from './lib/brn-slider-tick-mark.directive';\nexport * from './lib/brn-slider-track-active-fill.directive';\nexport * from './lib/brn-slider-track.directive';\n\nexport const BrnSliderImports = [\n\tBrnSliderDirective,\n\tBrnSliderTrackDirective,\n\tBrnSliderInputDirective,\n\tBrnSliderThumbDirective,\n] as const;\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}