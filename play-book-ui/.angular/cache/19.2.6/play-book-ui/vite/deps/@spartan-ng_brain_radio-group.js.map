{
  "version": 3,
  "sources": ["../../../../../../node_modules/@spartan-ng/brain/fesm2022/spartan-ng-brain-radio-group.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, input, booleanAttribute, computed, output, viewChild, ChangeDetectionStrategy, ViewEncapsulation, Component, forwardRef, model, signal, contentChildren, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nconst _c0 = [\"input\"];\nconst _c1 = [[[\"\", \"target\", \"\"], [\"\", \"indicator\", \"\"]], \"*\"];\nconst _c2 = [\"[target],[indicator]\", \"*\"];\nconst BrnRadioGroupToken = new InjectionToken('BrnRadioGroupToken');\nfunction provideBrnRadioGroupToken(directive) {\n  return {\n    provide: BrnRadioGroupToken,\n    useExisting: directive\n  };\n}\nfunction injectBrnRadioGroup() {\n  return inject(BrnRadioGroupToken);\n}\nclass BrnRadioChange {\n  source;\n  value;\n  constructor(source, value) {\n    this.source = source;\n    this.value = value;\n  }\n}\nclass BrnRadioComponent {\n  static _nextUniqueId = 0;\n  _focusMonitor = inject(FocusMonitor);\n  _elementRef = inject(ElementRef);\n  radioGroup = injectBrnRadioGroup();\n  /**\n   * Whether the radio button is disabled.\n   */\n  disabled = input(false, {\n    transform: booleanAttribute\n  });\n  /**\n   * Whether the radio button is disabled or the radio group is disabled.\n   */\n  disabledState = computed(() => this.disabled() || this.radioGroup && this.radioGroup.disabled());\n  /**\n   * Whether the radio button is checked.\n   */\n  checked = computed(() => this.radioGroup.value() === this.value());\n  tabIndex = computed(() => {\n    const disabled = this.disabledState();\n    const checked = this.checked();\n    const hasSelectedRadio = this.radioGroup.value() !== undefined;\n    const isFirstRadio = this.radioGroup.radioButtons()[0] === this;\n    if (disabled || !checked && (hasSelectedRadio || !isFirstRadio)) {\n      return -1;\n    }\n    return 0;\n  });\n  /**\n   * The unique ID for the radio button input. If none is supplied, it will be auto-generated.\n   */\n  id = input(undefined);\n  ariaLabel = input(undefined, {\n    alias: 'aria-label'\n  });\n  ariaLabelledby = input(undefined, {\n    alias: 'aria-labelledby'\n  });\n  ariaDescribedby = input(undefined, {\n    alias: 'aria-describedby'\n  });\n  /**\n   * The value this radio button represents.\n   */\n  value = input.required();\n  /**\n   * Whether the radio button is required.\n   */\n  required = input(false, {\n    transform: booleanAttribute\n  });\n  /**\n   * Event emitted when the checked state of this radio button changes.\n   */\n  change = output();\n  hostId = computed(() => this.id() ? this.id() : `brn-radio-${++BrnRadioComponent._nextUniqueId}`);\n  inputId = computed(() => `${this.hostId()}-input`);\n  inputElement = viewChild.required('input');\n  constructor() {\n    this._focusMonitor.monitor(this._elementRef, true);\n  }\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n  /** Dispatch change event with current value. */\n  emitChangeEvent() {\n    this.change.emit(new BrnRadioChange(this, this.value()));\n  }\n  onInputClick(event) {\n    // We have to stop propagation for click events on the visual hidden input element.\n    // By default, when a user clicks on a label element, a generated click event will be\n    // dispatched on the associated input element. Since we are using a label element as our\n    // root container, the click event on the `radio-button` will be executed twice.\n    // The real click event will bubble up, and the generated click event also tries to bubble up.\n    // This will lead to multiple click events.\n    // Preventing bubbling for the second event will solve that issue.\n    event.stopPropagation();\n  }\n  onInputInteraction(event) {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the `change` output.\n    event.stopPropagation();\n    if (!this.checked() && !this.disabledState()) {\n      this.emitChangeEvent();\n      this.radioGroup.select(this, this.value());\n    }\n  }\n  /** Triggered when the user clicks on the touch target. */\n  onTouchTargetClick(event) {\n    this.onInputInteraction(event);\n    if (!this.disabledState()) {\n      // Normally the input should be focused already, but if the click\n      // comes from the touch target, then we might have to focus it ourselves.\n      this.inputElement().nativeElement.focus();\n    }\n  }\n  /** @nocollapse */\n  static ɵfac = function BrnRadioComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnRadioComponent)();\n  };\n  /** @nocollapse */\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: BrnRadioComponent,\n    selectors: [[\"brn-radio\"]],\n    viewQuery: function BrnRadioComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuerySignal(ctx.inputElement, _c0, 5);\n      }\n      if (rf & 2) {\n        i0.ɵɵqueryAdvance();\n      }\n    },\n    hostAttrs: [1, \"brn-radio\"],\n    hostVars: 12,\n    hostBindings: function BrnRadioComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function BrnRadioComponent_focus_HostBindingHandler() {\n          return ctx.inputElement().nativeElement.focus();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"id\", ctx.hostId())(\"data-checked\", ctx.checked())(\"data-disabled\", ctx.disabledState())(\"data-value\", ctx.value())(\"tabindex\", null)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n        i0.ɵɵclassProp(\"brn-radio-checked\", ctx.checked())(\"brn-radio-disabled\", ctx.disabledState());\n      }\n    },\n    inputs: {\n      disabled: [1, \"disabled\"],\n      id: [1, \"id\"],\n      ariaLabel: [1, \"aria-label\", \"ariaLabel\"],\n      ariaLabelledby: [1, \"aria-labelledby\", \"ariaLabelledby\"],\n      ariaDescribedby: [1, \"aria-describedby\", \"ariaDescribedby\"],\n      value: [1, \"value\"],\n      required: [1, \"required\"]\n    },\n    outputs: {\n      change: \"change\"\n    },\n    exportAs: [\"brnRadio\"],\n    ngContentSelectors: _c2,\n    decls: 6,\n    vars: 11,\n    consts: [[\"input\", \"\"], [\"data-slot\", \"indicator\", 2, \"display\", \"flex\", \"height\", \"fit-content\", \"width\", \"fit-content\", 3, \"click\"], [\"type\", \"radio\", 2, \"position\", \"absolute\", \"width\", \"1px\", \"height\", \"1px\", \"padding\", \"0\", \"margin\", \"-1px\", \"overflow\", \"hidden\", \"clip\", \"rect(0, 0, 0, 0)\", \"white-space\", \"nowrap\", \"border-width\", \"0\", 3, \"change\", \"click\", \"id\", \"checked\", \"disabled\", \"tabIndex\", \"required\"], [\"data-slot\", \"label\", 3, \"for\"]],\n    template: function BrnRadioComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef(_c1);\n        i0.ɵɵelementStart(0, \"div\", 1);\n        i0.ɵɵlistener(\"click\", function BrnRadioComponent_Template_div_click_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onTouchTargetClick($event));\n        });\n        i0.ɵɵprojection(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"input\", 2, 0);\n        i0.ɵɵlistener(\"change\", function BrnRadioComponent_Template_input_change_2_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onInputInteraction($event));\n        })(\"click\", function BrnRadioComponent_Template_input_click_2_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.onInputClick($event));\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"label\", 3);\n        i0.ɵɵprojection(5, 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"id\", ctx.inputId())(\"checked\", ctx.checked())(\"disabled\", ctx.disabledState())(\"tabIndex\", ctx.tabIndex())(\"required\", ctx.required());\n        i0.ɵɵattribute(\"name\", ctx.radioGroup.name())(\"value\", ctx.value())(\"aria-label\", ctx.ariaLabel())(\"aria-labelledby\", ctx.ariaLabelledby())(\"aria-describedby\", ctx.ariaDescribedby());\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"for\", ctx.inputId());\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnRadioComponent, [{\n    type: Component,\n    args: [{\n      selector: 'brn-radio',\n      standalone: true,\n      host: {\n        class: 'brn-radio',\n        '[attr.id]': 'hostId()',\n        '[class.brn-radio-checked]': 'checked()',\n        '[class.brn-radio-disabled]': 'disabledState()',\n        '[attr.data-checked]': 'checked()',\n        '[attr.data-disabled]': 'disabledState()',\n        '[attr.data-value]': 'value()',\n        // Needs to be removed since it causes some a11y issues (see #21266).\n        '[attr.tabindex]': 'null',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-labelledby]': 'null',\n        '[attr.aria-describedby]': 'null',\n        // Note: under normal conditions focus shouldn't land on this element, however it may be\n        // programmatically set, for example inside of a focus trap, in this case we want to forward\n        // the focus to the native element.\n        '(focus)': 'inputElement().nativeElement.focus()'\n      },\n      exportAs: 'brnRadio',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n\t\t<div\n\t\t\tdata-slot=\"indicator\"\n\t\t\tstyle=\"display: flex; height: fit-content; width: fit-content\"\n\t\t\t(click)=\"onTouchTargetClick($event)\"\n\t\t>\n\t\t\t<ng-content select=\"[target],[indicator]\" />\n\t\t</div>\n\t\t<input\n\t\t\t#input\n\t\t\tstyle=\"position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0, 0, 0, 0); white-space: nowrap; border-width: 0;\"\n\t\t\ttype=\"radio\"\n\t\t\t[id]=\"inputId()\"\n\t\t\t[checked]=\"checked()\"\n\t\t\t[disabled]=\"disabledState()\"\n\t\t\t[tabIndex]=\"tabIndex()\"\n\t\t\t[attr.name]=\"radioGroup.name()\"\n\t\t\t[attr.value]=\"value()\"\n\t\t\t[required]=\"required()\"\n\t\t\t[attr.aria-label]=\"ariaLabel()\"\n\t\t\t[attr.aria-labelledby]=\"ariaLabelledby()\"\n\t\t\t[attr.aria-describedby]=\"ariaDescribedby()\"\n\t\t\t(change)=\"onInputInteraction($event)\"\n\t\t\t(click)=\"onInputClick($event)\"\n\t\t/>\n\t\t<label [for]=\"inputId()\" data-slot=\"label\">\n\t\t\t<ng-content />\n\t\t</label>\n\t`\n    }]\n  }], () => [], null);\n})();\nconst BRN_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => BrnRadioGroupDirective),\n  multi: true\n};\nclass BrnRadioGroupDirective {\n  static _nextUniqueId = 0;\n  onChange = () => {};\n  onTouched = () => {};\n  name = input(`brn-radio-group-${BrnRadioGroupDirective._nextUniqueId++}`);\n  /**\n   * The value of the selected radio button.\n   */\n  value = model();\n  /**\n   * Whether the radio group is disabled.\n   */\n  disabled = input(false, {\n    transform: booleanAttribute\n  });\n  /**\n   * Whether the radio group should be required.\n   */\n  required = input(false, {\n    transform: booleanAttribute\n  });\n  /**\n   * The direction of the radio group.\n   */\n  direction = input('ltr');\n  /**\n   * Event emitted when the group value changes.\n   */\n  change = output();\n  /**\n   * The internal disabled state of the radio group. This could be switched to a linkedSignal when we can drop v18 support.\n   * @internal\n   */\n  disabledState = computed(() => signal(this.disabled()));\n  /**\n   * Access the radio buttons within the group.\n   * @internal\n   */\n  radioButtons = contentChildren(BrnRadioComponent, {\n    descendants: true\n  });\n  writeValue(value) {\n    this.value.set(value);\n  }\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  setDisabledState(isDisabled) {\n    this.disabledState().set(isDisabled);\n  }\n  /**\n   * Select a radio button.\n   * @internal\n   */\n  select(radioButton, value) {\n    if (this.value() === value) {\n      return;\n    }\n    this.value.set(value);\n    this.onChange(value);\n    this.change.emit(new BrnRadioChange(radioButton, value));\n  }\n  /** @nocollapse */\n  static ɵfac = function BrnRadioGroupDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnRadioGroupDirective)();\n  };\n  /** @nocollapse */\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BrnRadioGroupDirective,\n    selectors: [[\"\", \"brnRadioGroup\", \"\"]],\n    contentQueries: function BrnRadioGroupDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuerySignal(dirIndex, ctx.radioButtons, BrnRadioComponent, 5);\n      }\n      if (rf & 2) {\n        i0.ɵɵqueryAdvance();\n      }\n    },\n    hostAttrs: [\"role\", \"radiogroup\"],\n    hostVars: 1,\n    hostBindings: function BrnRadioGroupDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focusout\", function BrnRadioGroupDirective_focusout_HostBindingHandler() {\n          return ctx.onTouched();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"dir\", ctx.direction());\n      }\n    },\n    inputs: {\n      name: [1, \"name\"],\n      value: [1, \"value\"],\n      disabled: [1, \"disabled\"],\n      required: [1, \"required\"],\n      direction: [1, \"direction\"]\n    },\n    outputs: {\n      value: \"valueChange\",\n      change: \"change\"\n    },\n    features: [i0.ɵɵProvidersFeature([BRN_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, provideBrnRadioGroupToken(BrnRadioGroupDirective)])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnRadioGroupDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[brnRadioGroup]',\n      standalone: true,\n      providers: [BRN_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, provideBrnRadioGroupToken(BrnRadioGroupDirective)],\n      host: {\n        role: 'radiogroup',\n        '[dir]': 'direction()',\n        '(focusout)': 'onTouched()'\n      }\n    }]\n  }], null, null);\n})();\nconst BrnRadioGroupImports = [BrnRadioGroupDirective, BrnRadioComponent];\nclass BrnRadioGroupModule {\n  /** @nocollapse */static ɵfac = function BrnRadioGroupModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnRadioGroupModule)();\n  };\n  /** @nocollapse */\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: BrnRadioGroupModule,\n    imports: [BrnRadioGroupDirective, BrnRadioComponent],\n    exports: [BrnRadioGroupDirective, BrnRadioComponent]\n  });\n  /** @nocollapse */\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnRadioGroupModule, [{\n    type: NgModule,\n    args: [{\n      imports: [...BrnRadioGroupImports],\n      exports: [...BrnRadioGroupImports]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BRN_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, BrnRadioChange, BrnRadioComponent, BrnRadioGroupDirective, BrnRadioGroupImports, BrnRadioGroupModule };\n"],
  "mappings": "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",
  "names": []
}
