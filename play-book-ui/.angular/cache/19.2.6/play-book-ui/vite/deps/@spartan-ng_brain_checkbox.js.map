{
  "version": 3,
  "sources": ["../../../../../../node_modules/@spartan-ng/brain/fesm2022/spartan-ng-brain-checkbox.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { forwardRef, booleanAttribute, inject, Renderer2, ElementRef, PLATFORM_ID, signal, model, computed, input, viewChild, output, effect, HostListener, ViewEncapsulation, ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { isPlatformBrowser, NgStyle } from '@angular/common';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nconst _c0 = [\"checkBox\"];\nconst _c1 = [\"*\"];\nconst _c2 = () => ({\n  position: \"absolute\",\n  width: \"1px\",\n  height: \"1px\",\n  padding: \"0\",\n  margin: \"-1px\",\n  overflow: \"hidden\",\n  clip: \"rect(0, 0, 0, 0)\",\n  whiteSpace: \"nowrap\",\n  borderWidth: \"0\"\n});\nconst BRN_CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => BrnCheckboxComponent),\n  multi: true\n};\nfunction indeterminateBooleanAttribute(value) {\n  if (value === 'indeterminate') return 'indeterminate';\n  return booleanAttribute(value);\n}\nconst CONTAINER_POST_FIX = '-checkbox';\nclass BrnCheckboxComponent {\n  _renderer = inject(Renderer2);\n  _elementRef = inject(ElementRef);\n  _focusMonitor = inject(FocusMonitor);\n  _isBrowser = isPlatformBrowser(inject(PLATFORM_ID));\n  _focusVisible = signal(false);\n  focusVisible = this._focusVisible.asReadonly();\n  _focused = signal(false);\n  focused = this._focused.asReadonly();\n  checked = model(false);\n  isChecked = this.checked.asReadonly();\n  _dataState = computed(() => {\n    const checked = this.checked();\n    if (checked === 'indeterminate') return 'indeterminate';\n    return checked ? 'checked' : 'unchecked';\n  });\n  _ariaChecked = computed(() => {\n    const checked = this.checked();\n    if (checked === 'indeterminate') return 'mixed';\n    return checked ? 'true' : 'false';\n  });\n  _value = computed(() => {\n    const checked = this.checked();\n    if (checked === 'indeterminate') return '';\n    return checked ? 'on' : 'off';\n  });\n  /** Used to set the id on the underlying input element. */\n  id = input(null);\n  hostId = computed(() => this.id() ? this.id() + CONTAINER_POST_FIX : null);\n  /** Used to set the name attribute on the underlying input element. */\n  name = input(null);\n  hostName = computed(() => this.name() ? this.name() + CONTAINER_POST_FIX : null);\n  /** Used to set the aria-label attribute on the underlying input element. */\n  ariaLabel = input(null, {\n    alias: 'aria-label'\n  });\n  /** Used to set the aria-labelledby attribute on the underlying input element. */\n  ariaLabelledby = input(null, {\n    alias: 'aria-labelledby'\n  });\n  ariaDescribedby = input(null, {\n    alias: 'aria-describedby'\n  });\n  required = input(false, {\n    transform: booleanAttribute\n  });\n  disabled = input(false, {\n    transform: booleanAttribute\n  });\n  state = computed(() => ({\n    disabled: signal(this.disabled())\n  }));\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  _onChange = () => {};\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  _onTouched = () => {};\n  checkbox = viewChild.required('checkBox');\n  changed = output();\n  constructor() {\n    effect(() => {\n      const parent = this._renderer.parentNode(this._elementRef.nativeElement);\n      if (!parent) return;\n      // check if parent is a label and assume it is for this checkbox\n      if (parent?.tagName === 'LABEL') {\n        this._renderer.setAttribute(parent, 'data-disabled', this.state().disabled() ? 'true' : 'false');\n        return;\n      }\n      if (!this._isBrowser) return;\n      const label = parent?.querySelector(`label[for=\"${this.id()}\"]`);\n      if (!label) return;\n      this._renderer.setAttribute(label, 'data-disabled', this.state().disabled() ? 'true' : 'false');\n    });\n  }\n  toggle(event) {\n    if (this.state().disabled()) return;\n    event.preventDefault();\n    const previousChecked = this.checked();\n    this.checked.set(previousChecked === 'indeterminate' ? true : !previousChecked);\n    this._onChange(!previousChecked);\n    this.changed.emit(!previousChecked);\n  }\n  ngAfterContentInit() {\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n      if (focusOrigin) this._focused.set(true);\n      if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n        this._focusVisible.set(true);\n      }\n      if (!focusOrigin) {\n        // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n        // Angular does not expect events to be raised during change detection, so any state\n        // change (such as a form control's ng-touched) will cause a changed-after-checked error.\n        // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n        // telling the form control it has been touched until the next tick.\n        Promise.resolve().then(() => {\n          this._focusVisible.set(false);\n          this._focused.set(false);\n          this._onTouched();\n        });\n      }\n    });\n    this.checkbox().nativeElement.indeterminate = this.checked() === 'indeterminate';\n    if (this.checkbox().nativeElement.indeterminate) {\n      this.checkbox().nativeElement.value = 'indeterminate';\n    } else {\n      this.checkbox().nativeElement.value = this.checked() ? 'on' : 'off';\n    }\n    this.checkbox().nativeElement.dispatchEvent(new Event('change'));\n  }\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n  writeValue(value) {\n    if (value === 'indeterminate') {\n      this.checked.set('indeterminate');\n    } else {\n      this.checked.set(!!value);\n    }\n  }\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /** Implemented as a part of ControlValueAccessor. */\n  setDisabledState(isDisabled) {\n    this.state().disabled.set(isDisabled);\n  }\n  /**\n   * If the space key is pressed, prevent the default action to stop the page from scrolling.\n   */\n  preventScrolling(event) {\n    event.preventDefault();\n  }\n  /** @nocollapse */\n  static ɵfac = function BrnCheckboxComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnCheckboxComponent)();\n  };\n  /** @nocollapse */\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: BrnCheckboxComponent,\n    selectors: [[\"brn-checkbox\"]],\n    viewQuery: function BrnCheckboxComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuerySignal(ctx.checkbox, _c0, 5);\n      }\n      if (rf & 2) {\n        i0.ɵɵqueryAdvance();\n      }\n    },\n    hostVars: 10,\n    hostBindings: function BrnCheckboxComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function BrnCheckboxComponent_click_HostBindingHandler($event) {\n          return ctx.toggle($event);\n        })(\"keyup.space\", function BrnCheckboxComponent_keyup_space_HostBindingHandler($event) {\n          return ctx.toggle($event);\n        })(\"keyup.enter\", function BrnCheckboxComponent_keyup_enter_HostBindingHandler($event) {\n          return ctx.toggle($event);\n        })(\"keydown.space\", function BrnCheckboxComponent_keydown_space_HostBindingHandler($event) {\n          return ctx.preventScrolling($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabindex\", ctx.state().disabled() ? \"-1\" : \"0\")(\"data-state\", ctx._dataState())(\"data-focus-visible\", ctx.focusVisible())(\"data-focus\", ctx.focused())(\"data-disabled\", ctx.state().disabled())(\"aria-labelledby\", null)(\"aria-label\", null)(\"aria-describedby\", null)(\"id\", ctx.hostId())(\"name\", ctx.hostName());\n      }\n    },\n    inputs: {\n      checked: [1, \"checked\"],\n      id: [1, \"id\"],\n      name: [1, \"name\"],\n      ariaLabel: [1, \"aria-label\", \"ariaLabel\"],\n      ariaLabelledby: [1, \"aria-labelledby\", \"ariaLabelledby\"],\n      ariaDescribedby: [1, \"aria-describedby\", \"ariaDescribedby\"],\n      required: [1, \"required\"],\n      disabled: [1, \"disabled\"]\n    },\n    outputs: {\n      checked: \"checkedChange\",\n      changed: \"changed\"\n    },\n    features: [i0.ɵɵProvidersFeature([BRN_CHECKBOX_VALUE_ACCESSOR])],\n    ngContentSelectors: _c1,\n    decls: 3,\n    vars: 12,\n    consts: [[\"checkBox\", \"\"], [\"tabindex\", \"-1\", \"type\", \"checkbox\", \"role\", \"checkbox\", 3, \"ngStyle\", \"id\", \"name\", \"value\", \"checked\", \"required\"]],\n    template: function BrnCheckboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelement(0, \"input\", 1, 0);\n        i0.ɵɵprojection(2);\n      }\n      if (rf & 2) {\n        let tmp_2_0;\n        let tmp_3_0;\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(11, _c2))(\"id\", (tmp_2_0 = ctx.id()) !== null && tmp_2_0 !== undefined ? tmp_2_0 : \"\")(\"name\", (tmp_3_0 = ctx.name()) !== null && tmp_3_0 !== undefined ? tmp_3_0 : \"\")(\"value\", ctx._value())(\"checked\", ctx.isChecked())(\"required\", ctx.required());\n        i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel())(\"aria-labelledby\", ctx.ariaLabelledby())(\"aria-describedby\", ctx.ariaDescribedby())(\"aria-required\", ctx.required() || null)(\"aria-checked\", ctx._ariaChecked());\n      }\n    },\n    dependencies: [NgStyle],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnCheckboxComponent, [{\n    type: Component,\n    args: [{\n      selector: 'brn-checkbox',\n      imports: [NgStyle],\n      template: `\n\t\t<input\n\t\t\t#checkBox\n\t\t\ttabindex=\"-1\"\n\t\t\ttype=\"checkbox\"\n\t\t\trole=\"checkbox\"\n\t\t\t[ngStyle]=\"{\n\t\t\t\tposition: 'absolute',\n\t\t\t\twidth: '1px',\n\t\t\t\theight: '1px',\n\t\t\t\tpadding: '0',\n\t\t\t\tmargin: '-1px',\n\t\t\t\toverflow: 'hidden',\n\t\t\t\tclip: 'rect(0, 0, 0, 0)',\n\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\tborderWidth: '0',\n\t\t\t}\"\n\t\t\t[id]=\"id() ?? ''\"\n\t\t\t[name]=\"name() ?? ''\"\n\t\t\t[value]=\"_value()\"\n\t\t\t[checked]=\"isChecked()\"\n\t\t\t[required]=\"required()\"\n\t\t\t[attr.aria-label]=\"ariaLabel()\"\n\t\t\t[attr.aria-labelledby]=\"ariaLabelledby()\"\n\t\t\t[attr.aria-describedby]=\"ariaDescribedby()\"\n\t\t\t[attr.aria-required]=\"required() || null\"\n\t\t\t[attr.aria-checked]=\"_ariaChecked()\"\n\t\t/>\n\t\t<ng-content />\n\t`,\n      host: {\n        '[attr.tabindex]': 'state().disabled() ? \"-1\" : \"0\"',\n        '[attr.data-state]': '_dataState()',\n        '[attr.data-focus-visible]': 'focusVisible()',\n        '[attr.data-focus]': 'focused()',\n        '[attr.data-disabled]': 'state().disabled()',\n        '[attr.aria-labelledby]': 'null',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-describedby]': 'null',\n        '[attr.id]': 'hostId()',\n        '[attr.name]': 'hostName()'\n      },\n      providers: [BRN_CHECKBOX_VALUE_ACCESSOR],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None\n    }]\n  }], () => [], {\n    toggle: [{\n      type: HostListener,\n      args: ['click', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keyup.space', ['$event']]\n    }, {\n      type: HostListener,\n      args: ['keyup.enter', ['$event']]\n    }],\n    preventScrolling: [{\n      type: HostListener,\n      args: ['keydown.space', ['$event']]\n    }]\n  });\n})();\nconst BrnCheckboxImports = [BrnCheckboxComponent];\nclass BrnCheckboxModule {\n  /** @nocollapse */static ɵfac = function BrnCheckboxModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnCheckboxModule)();\n  };\n  /** @nocollapse */\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: BrnCheckboxModule,\n    imports: [BrnCheckboxComponent],\n    exports: [BrnCheckboxComponent]\n  });\n  /** @nocollapse */\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [...BrnCheckboxImports],\n      exports: [...BrnCheckboxImports]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BRN_CHECKBOX_VALUE_ACCESSOR, BrnCheckboxComponent, BrnCheckboxImports, BrnCheckboxModule, indeterminateBooleanAttribute };\n"],
  "mappings": "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",
  "names": []
}
