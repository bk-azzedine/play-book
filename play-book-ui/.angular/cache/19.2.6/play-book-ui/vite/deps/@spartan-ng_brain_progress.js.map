{
  "version": 3,
  "sources": ["../../../../../../node_modules/@spartan-ng/brain/fesm2022/spartan-ng-brain-progress.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { InjectionToken, inject, Component, input, numberAttribute, computed, NgModule } from '@angular/core';\nconst _c0 = [\"*\"];\nconst BrnProgressToken = new InjectionToken('BrnProgressComponent');\nfunction provideBrnProgress(progress) {\n  return {\n    provide: BrnProgressToken,\n    useExisting: progress\n  };\n}\nfunction injectBrnProgress() {\n  return inject(BrnProgressToken);\n}\nclass BrnProgressIndicatorComponent {\n  progress = injectBrnProgress();\n  /** @nocollapse */\n  static ɵfac = function BrnProgressIndicatorComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnProgressIndicatorComponent)();\n  };\n  /** @nocollapse */\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: BrnProgressIndicatorComponent,\n    selectors: [[\"brn-progress-indicator\"]],\n    hostVars: 3,\n    hostBindings: function BrnProgressIndicatorComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"data-state\", ctx.progress.state())(\"data-value\", ctx.progress.value())(\"data-max\", ctx.progress.max());\n      }\n    },\n    decls: 0,\n    vars: 0,\n    template: function BrnProgressIndicatorComponent_Template(rf, ctx) {},\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnProgressIndicatorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'brn-progress-indicator',\n      standalone: true,\n      template: '',\n      host: {\n        '[attr.data-state]': 'progress.state()',\n        '[attr.data-value]': 'progress.value()',\n        '[attr.data-max]': 'progress.max()'\n      }\n    }]\n  }], null, null);\n})();\nclass BrnProgressComponent {\n  value = input(undefined, {\n    transform: value => value === undefined || value === null ? undefined : Number(value)\n  });\n  max = input(100, {\n    transform: numberAttribute\n  });\n  getValueLabel = input((value, max) => `${Math.round(value / max * 100)}%`);\n  label = computed(() => {\n    const value = this.value();\n    return value === null || value === undefined ? undefined : this.getValueLabel()(value, this.max());\n  });\n  state = computed(() => {\n    const value = this.value();\n    const max = this.max();\n    return value === null || value === undefined ? 'indeterminate' : value === max ? 'complete' : 'loading';\n  });\n  ngOnChanges(changes) {\n    if ('value' in changes || 'max' in changes) {\n      this.validate();\n    }\n  }\n  validate() {\n    // validate that the value is within the bounds of the max\n    const value = this.value();\n    const max = this.max();\n    if (value === null || value === undefined) {\n      return;\n    }\n    if (value > max || value < 0) {\n      throw Error('Value must be 0 or greater and less or equal to max');\n    }\n    if (max < 0) {\n      throw Error('max must be greater than 0');\n    }\n  }\n  /** @nocollapse */\n  static ɵfac = function BrnProgressComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnProgressComponent)();\n  };\n  /** @nocollapse */\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: BrnProgressComponent,\n    selectors: [[\"brn-progress\"]],\n    hostAttrs: [\"role\", \"progressbar\"],\n    hostVars: 7,\n    hostBindings: function BrnProgressComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-valuemax\", ctx.max())(\"aria-valuemin\", 0)(\"aria-valuenow\", ctx.value())(\"aria-valuetext\", ctx.label())(\"data-state\", ctx.state())(\"data-value\", ctx.value())(\"data-max\", ctx.max());\n      }\n    },\n    inputs: {\n      value: [1, \"value\"],\n      max: [1, \"max\"],\n      getValueLabel: [1, \"getValueLabel\"]\n    },\n    exportAs: [\"brnProgress\"],\n    features: [i0.ɵɵProvidersFeature([provideBrnProgress(BrnProgressComponent)]), i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function BrnProgressComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    encapsulation: 2\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnProgressComponent, [{\n    type: Component,\n    args: [{\n      selector: 'brn-progress',\n      standalone: true,\n      template: '<ng-content/>',\n      exportAs: 'brnProgress',\n      providers: [provideBrnProgress(BrnProgressComponent)],\n      host: {\n        role: 'progressbar',\n        '[attr.aria-valuemax]': 'max()',\n        '[attr.aria-valuemin]': '0',\n        '[attr.aria-valuenow]': 'value()',\n        '[attr.aria-valuetext]': 'label()',\n        '[attr.data-state]': 'state()',\n        '[attr.data-value]': 'value()',\n        '[attr.data-max]': 'max()'\n      }\n    }]\n  }], null, null);\n})();\nconst BrnProgressImports = [BrnProgressComponent, BrnProgressIndicatorComponent];\nclass BrnProgressModule {\n  /** @nocollapse */static ɵfac = function BrnProgressModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnProgressModule)();\n  };\n  /** @nocollapse */\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: BrnProgressModule,\n    imports: [BrnProgressComponent, BrnProgressIndicatorComponent],\n    exports: [BrnProgressComponent, BrnProgressIndicatorComponent]\n  });\n  /** @nocollapse */\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnProgressModule, [{\n    type: NgModule,\n    args: [{\n      imports: [...BrnProgressImports],\n      exports: [...BrnProgressImports]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrnProgressComponent, BrnProgressImports, BrnProgressIndicatorComponent, BrnProgressModule, injectBrnProgress };\n"],
  "mappings": "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",
  "names": []
}
