{
  "version": 3,
  "sources": ["../../../../../../node_modules/@angular/cdk/fesm2022/selection-model-0f5fc202.mjs", "../../../../../../node_modules/@angular/cdk/fesm2022/listbox.mjs", "../../../../../../node_modules/@spartan-ng/brain/fesm2022/spartan-ng-brain-select.mjs"],
  "sourcesContent": ["import { Subject } from 'rxjs';\n\n/**\n * Class to be used to power selecting one or more options from a list.\n */\nclass SelectionModel {\n  _multiple;\n  _emitChanges;\n  compareWith;\n  /** Currently-selected values. */\n  _selection = new Set();\n  /** Keeps track of the deselected options that haven't been emitted by the change event. */\n  _deselectedToEmit = [];\n  /** Keeps track of the selected options that haven't been emitted by the change event. */\n  _selectedToEmit = [];\n  /** Cache for the array value of the selected items. */\n  _selected;\n  /** Selected values. */\n  get selected() {\n    if (!this._selected) {\n      this._selected = Array.from(this._selection.values());\n    }\n    return this._selected;\n  }\n  /** Event emitted when the value has changed. */\n  changed = new Subject();\n  constructor(_multiple = false, initiallySelectedValues, _emitChanges = true, compareWith) {\n    this._multiple = _multiple;\n    this._emitChanges = _emitChanges;\n    this.compareWith = compareWith;\n    if (initiallySelectedValues && initiallySelectedValues.length) {\n      if (_multiple) {\n        initiallySelectedValues.forEach(value => this._markSelected(value));\n      } else {\n        this._markSelected(initiallySelectedValues[0]);\n      }\n      // Clear the array in order to avoid firing the change event for preselected values.\n      this._selectedToEmit.length = 0;\n    }\n  }\n  /**\n   * Selects a value or an array of values.\n   * @param values The values to select\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  select(...values) {\n    this._verifyValueAssignment(values);\n    values.forEach(value => this._markSelected(value));\n    const changed = this._hasQueuedChanges();\n    this._emitChangeEvent();\n    return changed;\n  }\n  /**\n   * Deselects a value or an array of values.\n   * @param values The values to deselect\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  deselect(...values) {\n    this._verifyValueAssignment(values);\n    values.forEach(value => this._unmarkSelected(value));\n    const changed = this._hasQueuedChanges();\n    this._emitChangeEvent();\n    return changed;\n  }\n  /**\n   * Sets the selected values\n   * @param values The new selected values\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  setSelection(...values) {\n    this._verifyValueAssignment(values);\n    const oldValues = this.selected;\n    const newSelectedSet = new Set(values.map(value => this._getConcreteValue(value)));\n    values.forEach(value => this._markSelected(value));\n    oldValues.filter(value => !newSelectedSet.has(this._getConcreteValue(value, newSelectedSet))).forEach(value => this._unmarkSelected(value));\n    const changed = this._hasQueuedChanges();\n    this._emitChangeEvent();\n    return changed;\n  }\n  /**\n   * Toggles a value between selected and deselected.\n   * @param value The value to toggle\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  toggle(value) {\n    return this.isSelected(value) ? this.deselect(value) : this.select(value);\n  }\n  /**\n   * Clears all of the selected values.\n   * @param flushEvent Whether to flush the changes in an event.\n   *   If false, the changes to the selection will be flushed along with the next event.\n   * @return Whether the selection changed as a result of this call\n   * @breaking-change 16.0.0 make return type boolean\n   */\n  clear(flushEvent = true) {\n    this._unmarkAll();\n    const changed = this._hasQueuedChanges();\n    if (flushEvent) {\n      this._emitChangeEvent();\n    }\n    return changed;\n  }\n  /**\n   * Determines whether a value is selected.\n   */\n  isSelected(value) {\n    return this._selection.has(this._getConcreteValue(value));\n  }\n  /**\n   * Determines whether the model does not have a value.\n   */\n  isEmpty() {\n    return this._selection.size === 0;\n  }\n  /**\n   * Determines whether the model has a value.\n   */\n  hasValue() {\n    return !this.isEmpty();\n  }\n  /**\n   * Sorts the selected values based on a predicate function.\n   */\n  sort(predicate) {\n    if (this._multiple && this.selected) {\n      this._selected.sort(predicate);\n    }\n  }\n  /**\n   * Gets whether multiple values can be selected.\n   */\n  isMultipleSelection() {\n    return this._multiple;\n  }\n  /** Emits a change event and clears the records of selected and deselected values. */\n  _emitChangeEvent() {\n    // Clear the selected values so they can be re-cached.\n    this._selected = null;\n    if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n      this.changed.next({\n        source: this,\n        added: this._selectedToEmit,\n        removed: this._deselectedToEmit\n      });\n      this._deselectedToEmit = [];\n      this._selectedToEmit = [];\n    }\n  }\n  /** Selects a value. */\n  _markSelected(value) {\n    value = this._getConcreteValue(value);\n    if (!this.isSelected(value)) {\n      if (!this._multiple) {\n        this._unmarkAll();\n      }\n      if (!this.isSelected(value)) {\n        this._selection.add(value);\n      }\n      if (this._emitChanges) {\n        this._selectedToEmit.push(value);\n      }\n    }\n  }\n  /** Deselects a value. */\n  _unmarkSelected(value) {\n    value = this._getConcreteValue(value);\n    if (this.isSelected(value)) {\n      this._selection.delete(value);\n      if (this._emitChanges) {\n        this._deselectedToEmit.push(value);\n      }\n    }\n  }\n  /** Clears out the selected values. */\n  _unmarkAll() {\n    if (!this.isEmpty()) {\n      this._selection.forEach(value => this._unmarkSelected(value));\n    }\n  }\n  /**\n   * Verifies the value assignment and throws an error if the specified value array is\n   * including multiple values while the selection model is not supporting multiple values.\n   */\n  _verifyValueAssignment(values) {\n    if (values.length > 1 && !this._multiple && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMultipleValuesInSingleSelectionError();\n    }\n  }\n  /** Whether there are queued up change to be emitted. */\n  _hasQueuedChanges() {\n    return !!(this._deselectedToEmit.length || this._selectedToEmit.length);\n  }\n  /** Returns a value that is comparable to inputValue by applying compareWith function, returns the same inputValue otherwise. */\n  _getConcreteValue(inputValue, selection) {\n    if (!this.compareWith) {\n      return inputValue;\n    } else {\n      selection = selection ?? this._selection;\n      for (let selectedValue of selection) {\n        if (this.compareWith(inputValue, selectedValue)) {\n          return selectedValue;\n        }\n      }\n      return inputValue;\n    }\n  }\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * @docs-private\n */\nfunction getMultipleValuesInSingleSelectionError() {\n  return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\nexport { SelectionModel as S, getMultipleValuesInSingleSelectionError as g };\n", "import * as i0 from '@angular/core';\nimport { inject, signal, ElementRef, booleanAttribute, Directive, Input, NgZone, ChangeDetectorRef, Renderer2, forwardRef, Output, ContentChildren, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, map, takeUntil, filter } from 'rxjs/operators';\nimport { c as A, k as SPACE, h as ENTER, H as HOME, E as END, U as UP_ARROW, D as DOWN_ARROW, L as LEFT_ARROW, R as RIGHT_ARROW } from './keycodes-107cd3e4.mjs';\nimport { A as ActiveDescendantKeyManager } from './activedescendant-key-manager-1351a9d3.mjs';\nimport { S as SelectionModel } from './selection-model-0f5fc202.mjs';\nimport { _ as _IdGenerator } from './id-generator-1959b006.mjs';\nimport { D as Directionality } from './directionality-0a678adc.mjs';\nimport { P as Platform } from './platform-610a08ae.mjs';\nimport { h as hasModifierKey } from './modifiers-33a5859e.mjs';\nimport { c as coerceArray } from './array-88e1bec3.mjs';\nimport './list-key-manager-c7b5cefb.mjs';\nimport './typeahead-11ae39bd.mjs';\nimport '@angular/common';\n\n/**\n * An implementation of SelectionModel that internally always represents the selection as a\n * multi-selection. This is necessary so that we can recover the full selection if the user\n * switches the listbox from single-selection to multi-selection after initialization.\n *\n * This selection model may report multiple selected values, even if it is in single-selection\n * mode. It is up to the user (CdkListbox) to check for invalid selections.\n */\nclass ListboxSelectionModel extends SelectionModel {\n  multiple;\n  constructor(multiple = false, initiallySelectedValues, emitChanges = true, compareWith) {\n    super(true, initiallySelectedValues, emitChanges, compareWith);\n    this.multiple = multiple;\n  }\n  isMultipleSelection() {\n    return this.multiple;\n  }\n  select(...values) {\n    // The super class is always in multi-selection mode, so we need to override the behavior if\n    // this selection model actually belongs to a single-selection listbox.\n    if (this.multiple) {\n      return super.select(...values);\n    } else {\n      return super.setSelection(...values);\n    }\n  }\n}\n/** A selectable option in a listbox. */\nclass CdkOption {\n  /** The id of the option's host element. */\n  get id() {\n    return this._id || this._generatedId;\n  }\n  set id(value) {\n    this._id = value;\n  }\n  _id;\n  _generatedId = inject(_IdGenerator).getId('cdk-option-');\n  /** The value of this option. */\n  value;\n  /**\n   * The text used to locate this item during listbox typeahead. If not specified,\n   * the `textContent` of the item will be used.\n   */\n  typeaheadLabel;\n  /** Whether this option is disabled. */\n  get disabled() {\n    return this.listbox.disabled || this._disabled();\n  }\n  set disabled(value) {\n    this._disabled.set(value);\n  }\n  _disabled = signal(false);\n  /** The tabindex of the option when it is enabled. */\n  get enabledTabIndex() {\n    return this._enabledTabIndex() === undefined ? this.listbox.enabledTabIndex : this._enabledTabIndex();\n  }\n  set enabledTabIndex(value) {\n    this._enabledTabIndex.set(value);\n  }\n  _enabledTabIndex = signal(undefined);\n  /** The option's host element */\n  element = inject(ElementRef).nativeElement;\n  /** The parent listbox this option belongs to. */\n  listbox = inject(CdkListbox);\n  /** Emits when the option is destroyed. */\n  destroyed = new Subject();\n  /** Emits when the option is clicked. */\n  _clicked = new Subject();\n  ngOnDestroy() {\n    this.destroyed.next();\n    this.destroyed.complete();\n  }\n  /** Whether this option is selected. */\n  isSelected() {\n    return this.listbox.isSelected(this);\n  }\n  /** Whether this option is active. */\n  isActive() {\n    return this.listbox.isActive(this);\n  }\n  /** Toggle the selected state of this option. */\n  toggle() {\n    this.listbox.toggle(this);\n  }\n  /** Select this option if it is not selected. */\n  select() {\n    this.listbox.select(this);\n  }\n  /** Deselect this option if it is selected. */\n  deselect() {\n    this.listbox.deselect(this);\n  }\n  /** Focus this option. */\n  focus() {\n    this.element.focus();\n  }\n  /** Get the label for this element which is required by the FocusableOption interface. */\n  getLabel() {\n    return (this.typeaheadLabel ?? this.element.textContent?.trim()) || '';\n  }\n  /**\n   * No-op implemented as a part of `Highlightable`.\n   * @docs-private\n   */\n  setActiveStyles() {\n    // If the listbox is using `aria-activedescendant` the option won't have focus so the\n    // browser won't scroll them into view automatically so we need to do it ourselves.\n    if (this.listbox.useActiveDescendant) {\n      this.element.scrollIntoView({\n        block: 'nearest',\n        inline: 'nearest'\n      });\n    }\n  }\n  /**\n   * No-op implemented as a part of `Highlightable`.\n   * @docs-private\n   */\n  setInactiveStyles() {}\n  /** Handle focus events on the option. */\n  _handleFocus() {\n    // Options can wind up getting focused in active descendant mode if the user clicks on them.\n    // In this case, we push focus back to the parent listbox to prevent an extra tab stop when\n    // the user performs a shift+tab.\n    if (this.listbox.useActiveDescendant) {\n      this.listbox._setActiveOption(this);\n      this.listbox.focus();\n    }\n  }\n  /** Get the tabindex for this option. */\n  _getTabIndex() {\n    if (this.listbox.useActiveDescendant || this.disabled) {\n      return -1;\n    }\n    return this.isActive() ? this.enabledTabIndex : -1;\n  }\n  static ɵfac = function CdkOption_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkOption)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkOption,\n    selectors: [[\"\", \"cdkOption\", \"\"]],\n    hostAttrs: [\"role\", \"option\", 1, \"cdk-option\"],\n    hostVars: 6,\n    hostBindings: function CdkOption_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function CdkOption_click_HostBindingHandler($event) {\n          return ctx._clicked.next($event);\n        })(\"focus\", function CdkOption_focus_HostBindingHandler() {\n          return ctx._handleFocus();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"aria-selected\", ctx.isSelected())(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled);\n        i0.ɵɵclassProp(\"cdk-option-active\", ctx.isActive());\n      }\n    },\n    inputs: {\n      id: \"id\",\n      value: [0, \"cdkOption\", \"value\"],\n      typeaheadLabel: [0, \"cdkOptionTypeaheadLabel\", \"typeaheadLabel\"],\n      disabled: [2, \"cdkOptionDisabled\", \"disabled\", booleanAttribute],\n      enabledTabIndex: [0, \"tabindex\", \"enabledTabIndex\"]\n    },\n    exportAs: [\"cdkOption\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkOption, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkOption]',\n      exportAs: 'cdkOption',\n      host: {\n        'role': 'option',\n        'class': 'cdk-option',\n        '[id]': 'id',\n        '[attr.aria-selected]': 'isSelected()',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.aria-disabled]': 'disabled',\n        '[class.cdk-option-active]': 'isActive()',\n        '(click)': '_clicked.next($event)',\n        '(focus)': '_handleFocus()'\n      }\n    }]\n  }], null, {\n    id: [{\n      type: Input\n    }],\n    value: [{\n      type: Input,\n      args: ['cdkOption']\n    }],\n    typeaheadLabel: [{\n      type: Input,\n      args: ['cdkOptionTypeaheadLabel']\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkOptionDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    enabledTabIndex: [{\n      type: Input,\n      args: ['tabindex']\n    }]\n  });\n})();\nclass CdkListbox {\n  _cleanupWindowBlur;\n  /** The id of the option's host element. */\n  get id() {\n    return this._id || this._generatedId;\n  }\n  set id(value) {\n    this._id = value;\n  }\n  _id;\n  _generatedId = inject(_IdGenerator).getId('cdk-listbox-');\n  /** The tabindex to use when the listbox is enabled. */\n  get enabledTabIndex() {\n    return this._enabledTabIndex() === undefined ? 0 : this._enabledTabIndex();\n  }\n  set enabledTabIndex(value) {\n    this._enabledTabIndex.set(value);\n  }\n  _enabledTabIndex = signal(undefined);\n  /** The value selected in the listbox, represented as an array of option values. */\n  get value() {\n    return this._invalid ? [] : this.selectionModel.selected;\n  }\n  set value(value) {\n    this._setSelection(value);\n  }\n  /**\n   * Whether the listbox allows multiple options to be selected. If the value switches from `true`\n   * to `false`, and more than one option is selected, all options are deselected.\n   */\n  get multiple() {\n    return this.selectionModel.multiple;\n  }\n  set multiple(value) {\n    this.selectionModel.multiple = value;\n    if (this.options) {\n      this._updateInternalValue();\n    }\n  }\n  /** Whether the listbox is disabled. */\n  get disabled() {\n    return this._disabled();\n  }\n  set disabled(value) {\n    this._disabled.set(value);\n  }\n  _disabled = signal(false);\n  /** Whether the listbox will use active descendant or will move focus onto the options. */\n  get useActiveDescendant() {\n    return this._useActiveDescendant();\n  }\n  set useActiveDescendant(value) {\n    this._useActiveDescendant.set(value);\n  }\n  _useActiveDescendant = signal(false);\n  /** The orientation of the listbox. Only affects keyboard interaction, not visual layout. */\n  get orientation() {\n    return this._orientation;\n  }\n  set orientation(value) {\n    this._orientation = value === 'horizontal' ? 'horizontal' : 'vertical';\n    if (value === 'horizontal') {\n      this.listKeyManager?.withHorizontalOrientation(this._dir?.value || 'ltr');\n    } else {\n      this.listKeyManager?.withVerticalOrientation();\n    }\n  }\n  _orientation = 'vertical';\n  /** The function used to compare option values. */\n  get compareWith() {\n    return this.selectionModel.compareWith;\n  }\n  set compareWith(fn) {\n    this.selectionModel.compareWith = fn;\n  }\n  /**\n   * Whether the keyboard navigation should wrap when the user presses arrow down on the last item\n   * or arrow up on the first item.\n   */\n  get navigationWrapDisabled() {\n    return this._navigationWrapDisabled;\n  }\n  set navigationWrapDisabled(wrap) {\n    this._navigationWrapDisabled = wrap;\n    this.listKeyManager?.withWrap(!this._navigationWrapDisabled);\n  }\n  _navigationWrapDisabled = false;\n  /** Whether keyboard navigation should skip over disabled items. */\n  get navigateDisabledOptions() {\n    return this._navigateDisabledOptions;\n  }\n  set navigateDisabledOptions(skip) {\n    this._navigateDisabledOptions = skip;\n    this.listKeyManager?.skipPredicate(this._navigateDisabledOptions ? this._skipNonePredicate : this._skipDisabledPredicate);\n  }\n  _navigateDisabledOptions = false;\n  /** Emits when the selected value(s) in the listbox change. */\n  valueChange = new Subject();\n  /** The child options in this listbox. */\n  options;\n  /** The selection model used by the listbox. */\n  selectionModel = new ListboxSelectionModel();\n  /** The key manager that manages keyboard navigation for this listbox. */\n  listKeyManager;\n  /** Emits when the listbox is destroyed. */\n  destroyed = new Subject();\n  /** The host element of the listbox. */\n  element = inject(ElementRef).nativeElement;\n  /** The Angular zone. */\n  ngZone = inject(NgZone);\n  /** The change detector for this listbox. */\n  changeDetectorRef = inject(ChangeDetectorRef);\n  /** Whether the currently selected value in the selection model is invalid. */\n  _invalid = false;\n  /** The last user-triggered option. */\n  _lastTriggered = null;\n  /** Callback called when the listbox has been touched */\n  _onTouched = () => {};\n  /** Callback called when the listbox value changes */\n  _onChange = () => {};\n  /** Emits when an option has been clicked. */\n  _optionClicked = defer(() => this.options.changes.pipe(startWith(this.options), switchMap(options => merge(...options.map(option => option._clicked.pipe(map(event => ({\n    option,\n    event\n  }))))))));\n  /** The directionality of the page. */\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  /** Whether the component is being rendered in the browser. */\n  _isBrowser = inject(Platform).isBrowser;\n  /** A predicate that skips disabled options. */\n  _skipDisabledPredicate = option => option.disabled;\n  /** A predicate that does not skip any options. */\n  _skipNonePredicate = () => false;\n  /** Whether the listbox currently has focus. */\n  _hasFocus = false;\n  /** A reference to the option that was active before the listbox lost focus. */\n  _previousActiveOption = null;\n  constructor() {\n    if (this._isBrowser) {\n      const renderer = inject(Renderer2);\n      this._cleanupWindowBlur = this.ngZone.runOutsideAngular(() => {\n        return renderer.listen('window', 'blur', () => {\n          if (this.element.contains(document.activeElement) && this._previousActiveOption) {\n            this._setActiveOption(this._previousActiveOption);\n            this._previousActiveOption = null;\n          }\n        });\n      });\n    }\n  }\n  ngAfterContentInit() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      this._verifyNoOptionValueCollisions();\n      this._verifyOptionValues();\n    }\n    this._initKeyManager();\n    // Update the internal value whenever the options or the model value changes.\n    merge(this.selectionModel.changed, this.options.changes).pipe(startWith(null), takeUntil(this.destroyed)).subscribe(() => this._updateInternalValue());\n    this._optionClicked.pipe(filter(({\n      option\n    }) => !option.disabled), takeUntil(this.destroyed)).subscribe(({\n      option,\n      event\n    }) => this._handleOptionClicked(option, event));\n  }\n  ngOnDestroy() {\n    this._cleanupWindowBlur?.();\n    this.listKeyManager?.destroy();\n    this.destroyed.next();\n    this.destroyed.complete();\n  }\n  /**\n   * Toggle the selected state of the given option.\n   * @param option The option to toggle\n   */\n  toggle(option) {\n    this.toggleValue(option.value);\n  }\n  /**\n   * Toggle the selected state of the given value.\n   * @param value The value to toggle\n   */\n  toggleValue(value) {\n    if (this._invalid) {\n      this.selectionModel.clear(false);\n    }\n    this.selectionModel.toggle(value);\n  }\n  /**\n   * Select the given option.\n   * @param option The option to select\n   */\n  select(option) {\n    this.selectValue(option.value);\n  }\n  /**\n   * Select the given value.\n   * @param value The value to select\n   */\n  selectValue(value) {\n    if (this._invalid) {\n      this.selectionModel.clear(false);\n    }\n    this.selectionModel.select(value);\n  }\n  /**\n   * Deselect the given option.\n   * @param option The option to deselect\n   */\n  deselect(option) {\n    this.deselectValue(option.value);\n  }\n  /**\n   * Deselect the given value.\n   * @param value The value to deselect\n   */\n  deselectValue(value) {\n    if (this._invalid) {\n      this.selectionModel.clear(false);\n    }\n    this.selectionModel.deselect(value);\n  }\n  /**\n   * Set the selected state of all options.\n   * @param isSelected The new selected state to set\n   */\n  setAllSelected(isSelected) {\n    if (!isSelected) {\n      this.selectionModel.clear();\n    } else {\n      if (this._invalid) {\n        this.selectionModel.clear(false);\n      }\n      this.selectionModel.select(...this.options.map(option => option.value));\n    }\n  }\n  /**\n   * Get whether the given option is selected.\n   * @param option The option to get the selected state of\n   */\n  isSelected(option) {\n    return this.isValueSelected(option.value);\n  }\n  /**\n   * Get whether the given option is active.\n   * @param option The option to get the active state of\n   */\n  isActive(option) {\n    return !!(this.listKeyManager?.activeItem === option);\n  }\n  /**\n   * Get whether the given value is selected.\n   * @param value The value to get the selected state of\n   */\n  isValueSelected(value) {\n    if (this._invalid) {\n      return false;\n    }\n    return this.selectionModel.isSelected(value);\n  }\n  /**\n   * Registers a callback to be invoked when the listbox's value changes from user input.\n   * @param fn The callback to register\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /**\n   * Registers a callback to be invoked when the listbox is blurred by the user.\n   * @param fn The callback to register\n   * @docs-private\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /**\n   * Sets the listbox's value.\n   * @param value The new value of the listbox\n   * @docs-private\n   */\n  writeValue(value) {\n    this._setSelection(value);\n    this._verifyOptionValues();\n  }\n  /**\n   * Sets the disabled state of the listbox.\n   * @param isDisabled The new disabled state\n   * @docs-private\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this.changeDetectorRef.markForCheck();\n  }\n  /** Focus the listbox's host element. */\n  focus() {\n    this.element.focus();\n  }\n  /**\n   * Triggers the given option in response to user interaction.\n   * - In single selection mode: selects the option and deselects any other selected option.\n   * - In multi selection mode: toggles the selected state of the option.\n   * @param option The option to trigger\n   */\n  triggerOption(option) {\n    if (option && !option.disabled) {\n      this._lastTriggered = option;\n      const changed = this.multiple ? this.selectionModel.toggle(option.value) : this.selectionModel.select(option.value);\n      if (changed) {\n        this._onChange(this.value);\n        this.valueChange.next({\n          value: this.value,\n          listbox: this,\n          option: option\n        });\n      }\n    }\n  }\n  /**\n   * Trigger the given range of options in response to user interaction.\n   * Should only be called in multi-selection mode.\n   * @param trigger The option that was triggered\n   * @param from The start index of the options to toggle\n   * @param to The end index of the options to toggle\n   * @param on Whether to toggle the option range on\n   */\n  triggerRange(trigger, from, to, on) {\n    if (this.disabled || trigger && trigger.disabled) {\n      return;\n    }\n    this._lastTriggered = trigger;\n    const isEqual = this.compareWith ?? Object.is;\n    const updateValues = [...this.options].slice(Math.max(0, Math.min(from, to)), Math.min(this.options.length, Math.max(from, to) + 1)).filter(option => !option.disabled).map(option => option.value);\n    const selected = [...this.value];\n    for (const updateValue of updateValues) {\n      const selectedIndex = selected.findIndex(selectedValue => isEqual(selectedValue, updateValue));\n      if (on && selectedIndex === -1) {\n        selected.push(updateValue);\n      } else if (!on && selectedIndex !== -1) {\n        selected.splice(selectedIndex, 1);\n      }\n    }\n    let changed = this.selectionModel.setSelection(...selected);\n    if (changed) {\n      this._onChange(this.value);\n      this.valueChange.next({\n        value: this.value,\n        listbox: this,\n        option: trigger\n      });\n    }\n  }\n  /**\n   * Sets the given option as active.\n   * @param option The option to make active\n   */\n  _setActiveOption(option) {\n    this.listKeyManager.setActiveItem(option);\n  }\n  /** Called when the listbox receives focus. */\n  _handleFocus() {\n    if (!this.useActiveDescendant) {\n      if (this.selectionModel.selected.length > 0) {\n        this._setNextFocusToSelectedOption();\n      } else {\n        this.listKeyManager.setNextItemActive();\n      }\n      this._focusActiveOption();\n    }\n  }\n  /** Called when the user presses keydown on the listbox. */\n  _handleKeydown(event) {\n    if (this.disabled) {\n      return;\n    }\n    const {\n      keyCode\n    } = event;\n    const previousActiveIndex = this.listKeyManager.activeItemIndex;\n    const ctrlKeys = ['ctrlKey', 'metaKey'];\n    if (this.multiple && keyCode === A && hasModifierKey(event, ...ctrlKeys)) {\n      // Toggle all options off if they're all selected, otherwise toggle them all on.\n      this.triggerRange(null, 0, this.options.length - 1, this.options.length !== this.value.length);\n      event.preventDefault();\n      return;\n    }\n    if (this.multiple && (keyCode === SPACE || keyCode === ENTER) && hasModifierKey(event, 'shiftKey')) {\n      if (this.listKeyManager.activeItem && this.listKeyManager.activeItemIndex != null) {\n        this.triggerRange(this.listKeyManager.activeItem, this._getLastTriggeredIndex() ?? this.listKeyManager.activeItemIndex, this.listKeyManager.activeItemIndex, !this.listKeyManager.activeItem.isSelected());\n      }\n      event.preventDefault();\n      return;\n    }\n    if (this.multiple && keyCode === HOME && hasModifierKey(event, ...ctrlKeys) && hasModifierKey(event, 'shiftKey')) {\n      const trigger = this.listKeyManager.activeItem;\n      if (trigger) {\n        const from = this.listKeyManager.activeItemIndex;\n        this.listKeyManager.setFirstItemActive();\n        this.triggerRange(trigger, from, this.listKeyManager.activeItemIndex, !trigger.isSelected());\n      }\n      event.preventDefault();\n      return;\n    }\n    if (this.multiple && keyCode === END && hasModifierKey(event, ...ctrlKeys) && hasModifierKey(event, 'shiftKey')) {\n      const trigger = this.listKeyManager.activeItem;\n      if (trigger) {\n        const from = this.listKeyManager.activeItemIndex;\n        this.listKeyManager.setLastItemActive();\n        this.triggerRange(trigger, from, this.listKeyManager.activeItemIndex, !trigger.isSelected());\n      }\n      event.preventDefault();\n      return;\n    }\n    if (keyCode === SPACE || keyCode === ENTER) {\n      this.triggerOption(this.listKeyManager.activeItem);\n      event.preventDefault();\n      return;\n    }\n    const isNavKey = keyCode === UP_ARROW || keyCode === DOWN_ARROW || keyCode === LEFT_ARROW || keyCode === RIGHT_ARROW || keyCode === HOME || keyCode === END;\n    this.listKeyManager.onKeydown(event);\n    // Will select an option if shift was pressed while navigating to the option\n    if (isNavKey && event.shiftKey && previousActiveIndex !== this.listKeyManager.activeItemIndex) {\n      this.triggerOption(this.listKeyManager.activeItem);\n    }\n  }\n  /** Called when a focus moves into the listbox. */\n  _handleFocusIn() {\n    // Note that we use a `focusin` handler for this instead of the existing `focus` handler,\n    // because focus won't land on the listbox if `useActiveDescendant` is enabled.\n    this._hasFocus = true;\n  }\n  /**\n   * Called when the focus leaves an element in the listbox.\n   * @param event The focusout event\n   */\n  _handleFocusOut(event) {\n    // Some browsers (e.g. Chrome and Firefox) trigger the focusout event when the user returns back to the document.\n    // To prevent losing the active option in this case, we store it in `_previousActiveOption` and restore it on the window `blur` event\n    // This ensures that the `activeItem` matches the actual focused element when the user returns to the document.\n    this._previousActiveOption = this.listKeyManager.activeItem;\n    const otherElement = event.relatedTarget;\n    if (this.element !== otherElement && !this.element.contains(otherElement)) {\n      this._onTouched();\n      this._hasFocus = false;\n      this._setNextFocusToSelectedOption();\n    }\n  }\n  /** Get the id of the active option if active descendant is being used. */\n  _getAriaActiveDescendant() {\n    return this.useActiveDescendant ? this.listKeyManager?.activeItem?.id : null;\n  }\n  /** Get the tabindex for the listbox. */\n  _getTabIndex() {\n    if (this.disabled) {\n      return -1;\n    }\n    return this.useActiveDescendant || !this.listKeyManager.activeItem ? this.enabledTabIndex : -1;\n  }\n  /** Initialize the key manager. */\n  _initKeyManager() {\n    this.listKeyManager = new ActiveDescendantKeyManager(this.options).withWrap(!this._navigationWrapDisabled).withTypeAhead().withHomeAndEnd().withAllowedModifierKeys(['shiftKey']).skipPredicate(this._navigateDisabledOptions ? this._skipNonePredicate : this._skipDisabledPredicate);\n    if (this.orientation === 'vertical') {\n      this.listKeyManager.withVerticalOrientation();\n    } else {\n      this.listKeyManager.withHorizontalOrientation(this._dir?.value || 'ltr');\n    }\n    if (this.selectionModel.selected.length) {\n      Promise.resolve().then(() => this._setNextFocusToSelectedOption());\n    }\n    this.listKeyManager.change.subscribe(() => this._focusActiveOption());\n    this.options.changes.pipe(takeUntil(this.destroyed)).subscribe(() => {\n      const activeOption = this.listKeyManager.activeItem;\n      // If the active option was deleted, we need to reset\n      // the key manager so it can allow focus back in.\n      if (activeOption && !this.options.find(option => option === activeOption)) {\n        this.listKeyManager.setActiveItem(-1);\n        this.changeDetectorRef.markForCheck();\n      }\n    });\n  }\n  /** Focus the active option. */\n  _focusActiveOption() {\n    if (!this.useActiveDescendant) {\n      this.listKeyManager.activeItem?.focus();\n    }\n    this.changeDetectorRef.markForCheck();\n  }\n  /**\n   * Set the selected values.\n   * @param value The list of new selected values.\n   */\n  _setSelection(value) {\n    if (this._invalid) {\n      this.selectionModel.clear(false);\n    }\n    this.selectionModel.setSelection(...this._coerceValue(value));\n    if (!this._hasFocus) {\n      this._setNextFocusToSelectedOption();\n    }\n  }\n  /** Sets the first selected option as first in the keyboard focus order. */\n  _setNextFocusToSelectedOption() {\n    // Null check the options since they only get defined after `ngAfterContentInit`.\n    const selected = this.options?.find(option => option.isSelected());\n    if (selected) {\n      this.listKeyManager.updateActiveItem(selected);\n    }\n  }\n  /** Update the internal value of the listbox based on the selection model. */\n  _updateInternalValue() {\n    const indexCache = new Map();\n    this.selectionModel.sort((a, b) => {\n      const aIndex = this._getIndexForValue(indexCache, a);\n      const bIndex = this._getIndexForValue(indexCache, b);\n      return aIndex - bIndex;\n    });\n    const selected = this.selectionModel.selected;\n    this._invalid = !this.multiple && selected.length > 1 || !!this._getInvalidOptionValues(selected).length;\n    this.changeDetectorRef.markForCheck();\n  }\n  /**\n   * Gets the index of the given value in the given list of options.\n   * @param cache The cache of indices found so far\n   * @param value The value to find\n   * @return The index of the value in the options list\n   */\n  _getIndexForValue(cache, value) {\n    const isEqual = this.compareWith || Object.is;\n    if (!cache.has(value)) {\n      let index = -1;\n      for (let i = 0; i < this.options.length; i++) {\n        if (isEqual(value, this.options.get(i).value)) {\n          index = i;\n          break;\n        }\n      }\n      cache.set(value, index);\n    }\n    return cache.get(value);\n  }\n  /**\n   * Handle the user clicking an option.\n   * @param option The option that was clicked.\n   */\n  _handleOptionClicked(option, event) {\n    event.preventDefault();\n    this.listKeyManager.setActiveItem(option);\n    if (event.shiftKey && this.multiple) {\n      this.triggerRange(option, this._getLastTriggeredIndex() ?? this.listKeyManager.activeItemIndex, this.listKeyManager.activeItemIndex, !option.isSelected());\n    } else {\n      this.triggerOption(option);\n    }\n  }\n  /** Verifies that no two options represent the same value under the compareWith function. */\n  _verifyNoOptionValueCollisions() {\n    this.options.changes.pipe(startWith(this.options), takeUntil(this.destroyed)).subscribe(() => {\n      const isEqual = this.compareWith ?? Object.is;\n      for (let i = 0; i < this.options.length; i++) {\n        const option = this.options.get(i);\n        let duplicate = null;\n        for (let j = i + 1; j < this.options.length; j++) {\n          const other = this.options.get(j);\n          if (isEqual(option.value, other.value)) {\n            duplicate = other;\n            break;\n          }\n        }\n        if (duplicate) {\n          // TODO(mmalerba): Link to docs about this.\n          if (this.compareWith) {\n            console.warn(`Found multiple CdkOption representing the same value under the given compareWith function`, {\n              option1: option.element,\n              option2: duplicate.element,\n              compareWith: this.compareWith\n            });\n          } else {\n            console.warn(`Found multiple CdkOption with the same value`, {\n              option1: option.element,\n              option2: duplicate.element\n            });\n          }\n          return;\n        }\n      }\n    });\n  }\n  /** Verifies that the option values are valid. */\n  _verifyOptionValues() {\n    if (this.options && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      const selected = this.selectionModel.selected;\n      const invalidValues = this._getInvalidOptionValues(selected);\n      if (!this.multiple && selected.length > 1) {\n        throw Error('Listbox cannot have more than one selected value in multi-selection mode.');\n      }\n      if (invalidValues.length) {\n        throw Error('Listbox has selected values that do not match any of its options.');\n      }\n    }\n  }\n  /**\n   * Coerces a value into an array representing a listbox selection.\n   * @param value The value to coerce\n   * @return An array\n   */\n  _coerceValue(value) {\n    return value == null ? [] : coerceArray(value);\n  }\n  /**\n   * Get the sublist of values that do not represent valid option values in this listbox.\n   * @param values The list of values\n   * @return The sublist of values that are not valid option values\n   */\n  _getInvalidOptionValues(values) {\n    const isEqual = this.compareWith || Object.is;\n    const validValues = (this.options || []).map(option => option.value);\n    return values.filter(value => !validValues.some(validValue => isEqual(value, validValue)));\n  }\n  /** Get the index of the last triggered option. */\n  _getLastTriggeredIndex() {\n    const index = this.options.toArray().indexOf(this._lastTriggered);\n    return index === -1 ? null : index;\n  }\n  static ɵfac = function CdkListbox_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkListbox)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkListbox,\n    selectors: [[\"\", \"cdkListbox\", \"\"]],\n    contentQueries: function CdkListbox_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, CdkOption, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.options = _t);\n      }\n    },\n    hostAttrs: [\"role\", \"listbox\", 1, \"cdk-listbox\"],\n    hostVars: 6,\n    hostBindings: function CdkListbox_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function CdkListbox_focus_HostBindingHandler() {\n          return ctx._handleFocus();\n        })(\"keydown\", function CdkListbox_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        })(\"focusout\", function CdkListbox_focusout_HostBindingHandler($event) {\n          return ctx._handleFocusOut($event);\n        })(\"focusin\", function CdkListbox_focusin_HostBindingHandler() {\n          return ctx._handleFocusIn();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled)(\"aria-multiselectable\", ctx.multiple)(\"aria-activedescendant\", ctx._getAriaActiveDescendant())(\"aria-orientation\", ctx.orientation);\n      }\n    },\n    inputs: {\n      id: \"id\",\n      enabledTabIndex: [0, \"tabindex\", \"enabledTabIndex\"],\n      value: [0, \"cdkListboxValue\", \"value\"],\n      multiple: [2, \"cdkListboxMultiple\", \"multiple\", booleanAttribute],\n      disabled: [2, \"cdkListboxDisabled\", \"disabled\", booleanAttribute],\n      useActiveDescendant: [2, \"cdkListboxUseActiveDescendant\", \"useActiveDescendant\", booleanAttribute],\n      orientation: [0, \"cdkListboxOrientation\", \"orientation\"],\n      compareWith: [0, \"cdkListboxCompareWith\", \"compareWith\"],\n      navigationWrapDisabled: [2, \"cdkListboxNavigationWrapDisabled\", \"navigationWrapDisabled\", booleanAttribute],\n      navigateDisabledOptions: [2, \"cdkListboxNavigatesDisabledOptions\", \"navigateDisabledOptions\", booleanAttribute]\n    },\n    outputs: {\n      valueChange: \"cdkListboxValueChange\"\n    },\n    exportAs: [\"cdkListbox\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => CdkListbox),\n      multi: true\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkListbox, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkListbox]',\n      exportAs: 'cdkListbox',\n      host: {\n        'role': 'listbox',\n        'class': 'cdk-listbox',\n        '[id]': 'id',\n        '[attr.tabindex]': '_getTabIndex()',\n        '[attr.aria-disabled]': 'disabled',\n        '[attr.aria-multiselectable]': 'multiple',\n        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n        '[attr.aria-orientation]': 'orientation',\n        '(focus)': '_handleFocus()',\n        '(keydown)': '_handleKeydown($event)',\n        '(focusout)': '_handleFocusOut($event)',\n        '(focusin)': '_handleFocusIn()'\n      },\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => CdkListbox),\n        multi: true\n      }]\n    }]\n  }], () => [], {\n    id: [{\n      type: Input\n    }],\n    enabledTabIndex: [{\n      type: Input,\n      args: ['tabindex']\n    }],\n    value: [{\n      type: Input,\n      args: ['cdkListboxValue']\n    }],\n    multiple: [{\n      type: Input,\n      args: [{\n        alias: 'cdkListboxMultiple',\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkListboxDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    useActiveDescendant: [{\n      type: Input,\n      args: [{\n        alias: 'cdkListboxUseActiveDescendant',\n        transform: booleanAttribute\n      }]\n    }],\n    orientation: [{\n      type: Input,\n      args: ['cdkListboxOrientation']\n    }],\n    compareWith: [{\n      type: Input,\n      args: ['cdkListboxCompareWith']\n    }],\n    navigationWrapDisabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkListboxNavigationWrapDisabled',\n        transform: booleanAttribute\n      }]\n    }],\n    navigateDisabledOptions: [{\n      type: Input,\n      args: [{\n        alias: 'cdkListboxNavigatesDisabledOptions',\n        transform: booleanAttribute\n      }]\n    }],\n    valueChange: [{\n      type: Output,\n      args: ['cdkListboxValueChange']\n    }],\n    options: [{\n      type: ContentChildren,\n      args: [CdkOption, {\n        descendants: true\n      }]\n    }]\n  });\n})();\nconst EXPORTED_DECLARATIONS = [CdkListbox, CdkOption];\nclass CdkListboxModule {\n  static ɵfac = function CdkListboxModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkListboxModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: CdkListboxModule,\n    imports: [CdkListbox, CdkOption],\n    exports: [CdkListbox, CdkOption]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkListboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [...EXPORTED_DECLARATIONS],\n      exports: [...EXPORTED_DECLARATIONS]\n    }]\n  }], null, null);\n})();\nexport { CdkListbox, CdkListboxModule, CdkOption };\n", "import * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, input, booleanAttribute, computed, signal, Directive, DestroyRef, Injector, viewChild, contentChild, contentChildren, effect, afterNextRender, untracked, ChangeDetectionStrategy, Component, TemplateRef, PLATFORM_ID, numberAttribute, model, NgModule } from '@angular/core';\nimport { NgTemplateOutlet, isPlatformBrowser } from '@angular/common';\nimport { takeUntilDestroyed, toSignal, toObservable } from '@angular/core/rxjs-interop';\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { Subject, fromEvent, interval, of } from 'rxjs';\nimport { takeUntil, switchMap, delay, map } from 'rxjs/operators';\nimport * as i1 from '@spartan-ng/brain/label';\nimport { BrnLabelDirective } from '@spartan-ng/brain/label';\nimport { NgControl, NgForm, FormGroupDirective } from '@angular/forms';\nimport { CdkListboxModule } from '@angular/cdk/listbox';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport { provideExposedSideProviderExisting, provideExposesStateProviderExisting } from '@spartan-ng/brain/core';\nimport { BrnFormFieldControl } from '@spartan-ng/brain/form-field';\nimport { ErrorStateMatcher, ErrorStateTracker } from '@spartan-ng/brain/forms';\nconst _c0 = [\"viewport\"];\nconst _c1 = [\"*\", [[\"hlm-select-scroll-up\"]], [[\"brnSelectScrollUp\"]], [[\"brnSelectScrollDown\"]], [[\"hlm-select-scroll-down\"]]];\nconst _c2 = [\"*\", \"hlm-select-scroll-up\", \"brnSelectScrollUp\", \"brnSelectScrollDown\", \"hlm-select-scroll-down\"];\nfunction BrnSelectContentComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1);\n    i0.ɵɵprojection(1, 2);\n  }\n}\nfunction BrnSelectContentComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction BrnSelectContentComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 3);\n    i0.ɵɵprojection(1, 4);\n  }\n}\nfunction BrnSelectContentComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c3 = a0 => ({\n  $implicit: a0\n});\nfunction BrnSelectValueComponent_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 2);\n  }\n  if (rf & 2) {\n    let tmp_3_0;\n    const ctx_r0 = i0.ɵɵnextContext();\n    const defaultPlaceholderTemplate_r2 = i0.ɵɵreference(5);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (tmp_3_0 = (tmp_3_0 = ctx_r0.customPlaceholderTemplate()) == null ? null : tmp_3_0.templateRef) !== null && tmp_3_0 !== undefined ? tmp_3_0 : defaultPlaceholderTemplate_r2);\n  }\n}\nfunction BrnSelectValueComponent_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 3);\n  }\n  if (rf & 2) {\n    let tmp_3_0;\n    const ctx_r0 = i0.ɵɵnextContext();\n    const defaultValueTemplate_r3 = i0.ɵɵreference(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", (tmp_3_0 = (tmp_3_0 = ctx_r0.customValueTemplate()) == null ? null : tmp_3_0.templateRef) !== null && tmp_3_0 !== undefined ? tmp_3_0 : defaultValueTemplate_r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c3, ctx_r0._select.value()));\n  }\n}\nfunction BrnSelectValueComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate(ctx_r0.value());\n  }\n}\nfunction BrnSelectValueComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate(ctx_r0.placeholder());\n  }\n}\nconst _c4 = [[[\"hlm-select-trigger\"], [\"\", \"brnSelectTrigger\", \"\"]], [[\"label\", \"hlmLabel\", \"\"], [\"label\", \"brnLabel\", \"\"]], \"*\"];\nconst _c5 = [\"hlm-select-trigger,[brnSelectTrigger]\", \"label[hlmLabel],label[brnLabel]\", \"*\"];\nfunction BrnSelectComponent_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 1);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"id\", ctx_r1.labelId());\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.placeholder());\n  }\n}\nfunction BrnSelectComponent_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1);\n  }\n}\nfunction BrnSelectComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2);\n  }\n}\nconst BrnSelectContentToken = new InjectionToken('BrnSelectContentToken');\nfunction injectBrnSelectContent() {\n  return inject(BrnSelectContentToken);\n}\nfunction provideBrnSelectContent(select) {\n  return {\n    provide: BrnSelectContentToken,\n    useExisting: select\n  };\n}\nconst BrnSelectToken = new InjectionToken('BrnSelectToken');\nfunction injectBrnSelect() {\n  return inject(BrnSelectToken);\n}\nfunction provideBrnSelect(select) {\n  return {\n    provide: BrnSelectToken,\n    useExisting: select\n  };\n}\nlet nextId$1 = 0;\nclass BrnSelectOptionDirective {\n  _select = injectBrnSelect();\n  _content = injectBrnSelectContent();\n  elementRef = inject(ElementRef);\n  id = input(`brn-option-${nextId$1++}`);\n  value = input();\n  // we use \"_disabled\" here because disabled is already defined in the Highlightable interface\n  _disabled = input(false, {\n    alias: 'disabled',\n    transform: booleanAttribute\n  });\n  get disabled() {\n    return this._disabled();\n  }\n  selected = computed(() => this.value() !== undefined && this._select.isSelected(this.value()));\n  _active = signal(false);\n  checkedState = computed(() => this.selected() ? 'checked' : 'unchecked');\n  dir = this._select.dir;\n  select() {\n    if (this._disabled()) {\n      return;\n    }\n    this._select.selectOption(this.value());\n  }\n  /** Get the label for this element which is required by the FocusableOption interface. */\n  getLabel() {\n    return this.elementRef.nativeElement.textContent?.trim() ?? '';\n  }\n  setActiveStyles() {\n    this._active.set(true);\n    // scroll the option into view if it is not visible\n    this.elementRef.nativeElement.scrollIntoView({\n      block: 'nearest'\n    });\n  }\n  setInactiveStyles() {\n    this._active.set(false);\n  }\n  activate() {\n    if (this._disabled()) {\n      return;\n    }\n    this._content.setActiveOption(this);\n  }\n  /** @nocollapse */\n  static ɵfac = function BrnSelectOptionDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnSelectOptionDirective)();\n  };\n  /** @nocollapse */\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BrnSelectOptionDirective,\n    selectors: [[\"\", \"brnOption\", \"\"]],\n    hostAttrs: [\"role\", \"option\"],\n    hostVars: 6,\n    hostBindings: function BrnSelectOptionDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function BrnSelectOptionDirective_click_HostBindingHandler() {\n          return ctx.select();\n        })(\"mouseenter\", function BrnSelectOptionDirective_mouseenter_HostBindingHandler() {\n          return ctx.activate();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id());\n        i0.ɵɵattribute(\"aria-selected\", ctx.selected())(\"aria-disabled\", ctx._disabled())(\"dir\", ctx._select.dir())(\"data-active\", ctx._active() ? \"\" : undefined)(\"data-disabled\", ctx._disabled() ? \"\" : undefined);\n      }\n    },\n    inputs: {\n      id: [1, \"id\"],\n      value: [1, \"value\"],\n      _disabled: [1, \"disabled\", \"_disabled\"]\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectOptionDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[brnOption]',\n      standalone: true,\n      host: {\n        role: 'option',\n        '[id]': 'id()',\n        '[attr.aria-selected]': 'selected()',\n        '[attr.aria-disabled]': '_disabled()',\n        '(click)': 'select()',\n        '[attr.dir]': '_select.dir()',\n        '[attr.data-active]': \"_active() ? '' : undefined\",\n        '[attr.data-disabled]': \"_disabled() ? '' : undefined\",\n        '(mouseenter)': 'activate()'\n      }\n    }]\n  }], null, null);\n})();\nconst SCROLLBY_PIXELS = 100;\nclass BrnSelectScrollUpDirective {\n  _el = inject(ElementRef);\n  _selectContent = inject(BrnSelectContentComponent);\n  _endReached = new Subject();\n  _destroyRef = inject(DestroyRef);\n  startEmittingEvents() {\n    const mouseLeave$ = fromEvent(this._el.nativeElement, 'mouseleave');\n    interval(100).pipe(takeUntil(mouseLeave$), takeUntil(this._endReached), takeUntilDestroyed(this._destroyRef)).subscribe(() => this._selectContent.moveFocusUp());\n  }\n  stopEmittingEvents() {\n    this._endReached.next(true);\n  }\n  /** @nocollapse */\n  static ɵfac = function BrnSelectScrollUpDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnSelectScrollUpDirective)();\n  };\n  /** @nocollapse */\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BrnSelectScrollUpDirective,\n    selectors: [[\"\", \"brnSelectScrollUp\", \"\"], [\"brn-select-scroll-up\"], [\"hlm-select-scroll-up\", 5, \"noHlm\"]],\n    hostAttrs: [\"aria-hidden\", \"true\"],\n    hostBindings: function BrnSelectScrollUpDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mouseenter\", function BrnSelectScrollUpDirective_mouseenter_HostBindingHandler() {\n          return ctx.startEmittingEvents();\n        });\n      }\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectScrollUpDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[brnSelectScrollUp], brn-select-scroll-up, hlm-select-scroll-up:not(noHlm)',\n      standalone: true,\n      host: {\n        'aria-hidden': 'true',\n        '(mouseenter)': 'startEmittingEvents()'\n      }\n    }]\n  }], null, null);\n})();\nclass BrnSelectScrollDownDirective {\n  _el = inject(ElementRef);\n  _selectContent = inject(BrnSelectContentComponent);\n  _endReached = new Subject();\n  _destroyRef = inject(DestroyRef);\n  startEmittingEvents() {\n    const mouseLeave$ = fromEvent(this._el.nativeElement, 'mouseleave');\n    interval(100).pipe(takeUntil(mouseLeave$), takeUntil(this._endReached), takeUntilDestroyed(this._destroyRef)).subscribe(() => this._selectContent.moveFocusDown());\n  }\n  stopEmittingEvents() {\n    this._endReached.next(true);\n  }\n  /** @nocollapse */\n  static ɵfac = function BrnSelectScrollDownDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnSelectScrollDownDirective)();\n  };\n  /** @nocollapse */\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BrnSelectScrollDownDirective,\n    selectors: [[\"\", \"brnSelectScrollDown\", \"\"], [\"brn-select-scroll-down\"], [\"hlm-select-scroll-down\", 5, \"noHlm\"]],\n    hostAttrs: [\"aria-hidden\", \"true\"],\n    hostBindings: function BrnSelectScrollDownDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"mouseenter\", function BrnSelectScrollDownDirective_mouseenter_HostBindingHandler() {\n          return ctx.startEmittingEvents();\n        });\n      }\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectScrollDownDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[brnSelectScrollDown], brn-select-scroll-down, hlm-select-scroll-down:not(noHlm)',\n      standalone: true,\n      host: {\n        'aria-hidden': 'true',\n        '(mouseenter)': 'startEmittingEvents()'\n      }\n    }]\n  }], null, null);\n})();\nclass BrnSelectContentComponent {\n  _elementRef = inject(ElementRef);\n  _injector = inject(Injector);\n  _select = injectBrnSelect();\n  canScrollUp = signal(false);\n  canScrollDown = signal(false);\n  viewport = viewChild.required('viewport');\n  scrollUpBtn = contentChild(BrnSelectScrollUpDirective);\n  scrollDownBtn = contentChild(BrnSelectScrollDownDirective);\n  _options = contentChildren(BrnSelectOptionDirective, {\n    descendants: true\n  });\n  /** @internal */\n  keyManager = null;\n  constructor() {\n    effect(() => {\n      this._select.open() && afterNextRender(() => this.updateArrowDisplay(), {\n        injector: this._injector\n      });\n    });\n  }\n  ngAfterContentInit() {\n    this.keyManager = new ActiveDescendantKeyManager(this._options, this._injector).withHomeAndEnd().withVerticalOrientation().withTypeAhead().withAllowedModifierKeys(['shiftKey']).withWrap().skipPredicate(option => option._disabled());\n    effect(() => {\n      // any time the select is opened, we need to focus the first selected option or the first option\n      const open = this._select.open();\n      const options = this._options();\n      if (!open || !options.length) {\n        return;\n      }\n      untracked(() => {\n        const selectedOption = options.find(option => option.selected());\n        if (selectedOption) {\n          this.keyManager?.setActiveItem(selectedOption);\n        } else {\n          this.keyManager?.setFirstItemActive();\n        }\n      });\n    }, {\n      injector: this._injector\n    });\n  }\n  updateArrowDisplay() {\n    const {\n      scrollTop,\n      scrollHeight,\n      clientHeight\n    } = this.viewport().nativeElement;\n    this.canScrollUp.set(scrollTop > 0);\n    const maxScroll = scrollHeight - clientHeight;\n    this.canScrollDown.set(Math.ceil(scrollTop) < maxScroll);\n  }\n  handleScroll() {\n    this.updateArrowDisplay();\n  }\n  focusList() {\n    this._elementRef.nativeElement.focus();\n  }\n  moveFocusUp() {\n    this.viewport().nativeElement.scrollBy({\n      top: -SCROLLBY_PIXELS,\n      behavior: 'smooth'\n    });\n    if (this.viewport().nativeElement.scrollTop === 0) {\n      this.scrollUpBtn()?.stopEmittingEvents();\n    }\n  }\n  moveFocusDown() {\n    this.viewport().nativeElement.scrollBy({\n      top: SCROLLBY_PIXELS,\n      behavior: 'smooth'\n    });\n    const viewportSize = this._elementRef.nativeElement.scrollHeight;\n    const viewportScrollPosition = this.viewport().nativeElement.scrollTop;\n    if (viewportSize + viewportScrollPosition + SCROLLBY_PIXELS > this.viewport().nativeElement.scrollHeight + SCROLLBY_PIXELS / 2) {\n      this.scrollDownBtn()?.stopEmittingEvents();\n    }\n  }\n  setActiveOption(option) {\n    const index = this._options().findIndex(o => o === option);\n    if (index === -1) {\n      return;\n    }\n    this.keyManager?.setActiveItem(index);\n  }\n  selectActiveItem(event) {\n    event.preventDefault();\n    const activeOption = this.keyManager?.activeItem;\n    if (activeOption) {\n      this._select.selectOption(activeOption.value());\n    }\n  }\n  /** @nocollapse */\n  static ɵfac = function BrnSelectContentComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnSelectContentComponent)();\n  };\n  /** @nocollapse */\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: BrnSelectContentComponent,\n    selectors: [[\"brn-select-content\"], [\"hlm-select-content\", 5, \"noHlm\"]],\n    contentQueries: function BrnSelectContentComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuerySignal(dirIndex, ctx.scrollUpBtn, BrnSelectScrollUpDirective, 5);\n        i0.ɵɵcontentQuerySignal(dirIndex, ctx.scrollDownBtn, BrnSelectScrollDownDirective, 5);\n        i0.ɵɵcontentQuerySignal(dirIndex, ctx._options, BrnSelectOptionDirective, 5);\n      }\n      if (rf & 2) {\n        i0.ɵɵqueryAdvance(3);\n      }\n    },\n    viewQuery: function BrnSelectContentComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuerySignal(ctx.viewport, _c0, 5);\n      }\n      if (rf & 2) {\n        i0.ɵɵqueryAdvance();\n      }\n    },\n    hostAttrs: [\"role\", \"listbox\", \"tabindex\", \"0\", \"aria-orientation\", \"vertical\"],\n    hostVars: 7,\n    hostBindings: function BrnSelectContentComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function BrnSelectContentComponent_keydown_HostBindingHandler($event) {\n          return ctx.keyManager == null ? null : ctx.keyManager.onKeydown($event);\n        })(\"keydown.enter\", function BrnSelectContentComponent_keydown_enter_HostBindingHandler($event) {\n          return ctx.selectActiveItem($event);\n        })(\"keydown.space\", function BrnSelectContentComponent_keydown_space_HostBindingHandler($event) {\n          return ctx.selectActiveItem($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx._select.id() + \"--content\");\n        i0.ɵɵattribute(\"aria-multiselectable\", ctx._select.multiple())(\"aria-disabled\", ctx._select.disabled() || ctx._select._formDisabled())(\"aria-activedescendant\", ctx.keyManager == null ? null : ctx.keyManager.activeItem == null ? null : ctx.keyManager.activeItem.id())(\"aria-labelledBy\", ctx._select.labelId())(\"aria-controlledBy\", ctx._select.id() + \"--trigger\")(\"dir\", ctx._select.dir());\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([provideBrnSelectContent(BrnSelectContentComponent)])],\n    ngContentSelectors: _c2,\n    decls: 9,\n    vars: 2,\n    consts: [[\"scrollUp\", \"\"], [\"viewport\", \"\"], [\"scrollDown\", \"\"], [4, \"ngTemplateOutlet\"], [\"data-brn-select-viewport\", \"\", 2, \"flex\", \"1 1 0%\", \"position\", \"relative\", \"width\", \"100%\", \"overflow\", \"auto\", \"min-height\", \"36px\", \"padding-bottom\", \"2px\", \"margin-bottom\", \"-2px\", 3, \"scroll\"]],\n    template: function BrnSelectContentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef(_c1);\n        i0.ɵɵtemplate(0, BrnSelectContentComponent_ng_template_0_Template, 2, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(2, BrnSelectContentComponent_ng_container_2_Template, 1, 0, \"ng-container\", 3);\n        i0.ɵɵelementStart(3, \"div\", 4, 1);\n        i0.ɵɵlistener(\"scroll\", function BrnSelectContentComponent_Template_div_scroll_3_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.handleScroll());\n        });\n        i0.ɵɵprojection(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, BrnSelectContentComponent_ng_template_6_Template, 2, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor)(8, BrnSelectContentComponent_ng_container_8_Template, 1, 0, \"ng-container\", 3);\n      }\n      if (rf & 2) {\n        const scrollUp_r2 = i0.ɵɵreference(1);\n        const scrollDown_r3 = i0.ɵɵreference(7);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.canScrollUp() && ctx.scrollUpBtn() ? scrollUp_r2 : null);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.canScrollDown() && ctx.scrollDownBtn() ? scrollDown_r3 : null);\n      }\n    },\n    dependencies: [NgTemplateOutlet],\n    styles: [\"[_nghost-%COMP%]{display:flex;box-sizing:border-box;flex-direction:column;outline:none;pointer-events:auto}[data-brn-select-viewport][_ngcontent-%COMP%]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch}[data-brn-select-viewport][_ngcontent-%COMP%]::-webkit-scrollbar{display:none}\"],\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectContentComponent, [{\n    type: Component,\n    args: [{\n      standalone: true,\n      selector: 'brn-select-content, hlm-select-content:not(noHlm)',\n      imports: [NgTemplateOutlet],\n      providers: [provideBrnSelectContent(BrnSelectContentComponent)],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        role: 'listbox',\n        tabindex: '0',\n        '[attr.aria-multiselectable]': '_select.multiple()',\n        '[attr.aria-disabled]': '_select.disabled() || _select._formDisabled()',\n        'aria-orientation': 'vertical',\n        '[attr.aria-activedescendant]': 'keyManager?.activeItem?.id()',\n        '[attr.aria-labelledBy]': '_select.labelId()',\n        '[attr.aria-controlledBy]': \"_select.id() +'--trigger'\",\n        '[id]': \"_select.id() + '--content'\",\n        '[attr.dir]': '_select.dir()',\n        '(keydown)': 'keyManager?.onKeydown($event)',\n        '(keydown.enter)': 'selectActiveItem($event)',\n        '(keydown.space)': 'selectActiveItem($event)'\n      },\n      template: `\n\t\t<ng-template #scrollUp>\n\t\t\t<ng-content select=\"hlm-select-scroll-up\" />\n\t\t\t<ng-content select=\"brnSelectScrollUp\" />\n\t\t</ng-template>\n\t\t<ng-container *ngTemplateOutlet=\"canScrollUp() && scrollUpBtn() ? scrollUp : null\" />\n\t\t<div\n\t\t\tdata-brn-select-viewport\n\t\t\t#viewport\n\t\t\t(scroll)=\"handleScroll()\"\n\t\t\tstyle=\"flex: 1 1 0%;\n\t\t\tposition: relative;\n\t\t\twidth:100%;\n\t\t\toverflow:auto;\n\t\t\tmin-height: 36px;\n      padding-bottom: 2px;\n      margin-bottom: -2px;\"\n\t\t>\n\t\t\t<ng-content />\n\t\t</div>\n\t\t<ng-template #scrollDown>\n\t\t\t<ng-content select=\"brnSelectScrollDown\" />\n\t\t\t<ng-content select=\"hlm-select-scroll-down\" />\n\t\t</ng-template>\n\t\t<ng-container *ngTemplateOutlet=\"canScrollDown() && scrollDownBtn() ? scrollDown : null\" />\n\t`,\n      styles: [\":host{display:flex;box-sizing:border-box;flex-direction:column;outline:none;pointer-events:auto}[data-brn-select-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch}[data-brn-select-viewport]::-webkit-scrollbar{display:none}\\n\"]\n    }]\n  }], () => [], null);\n})();\nclass BrnSelectGroupDirective {\n  labelledBy = signal('');\n  /** @nocollapse */\n  static ɵfac = function BrnSelectGroupDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnSelectGroupDirective)();\n  };\n  /** @nocollapse */\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BrnSelectGroupDirective,\n    selectors: [[\"\", \"brnSelectGroup\", \"\"]],\n    hostAttrs: [\"role\", \"group\"],\n    hostVars: 1,\n    hostBindings: function BrnSelectGroupDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-labelledby\", ctx.labelledBy());\n      }\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectGroupDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[brnSelectGroup]',\n      standalone: true,\n      host: {\n        role: 'group',\n        '[attr.aria-labelledby]': 'labelledBy()'\n      }\n    }]\n  }], null, null);\n})();\nclass BrnSelectLabelDirective {\n  _group = inject(BrnSelectGroupDirective, {\n    optional: true\n  });\n  _label = inject(BrnLabelDirective, {\n    host: true\n  });\n  constructor() {\n    this._group?.labelledBy.set(this._label.id());\n  }\n  /** @nocollapse */\n  static ɵfac = function BrnSelectLabelDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnSelectLabelDirective)();\n  };\n  /** @nocollapse */\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BrnSelectLabelDirective,\n    selectors: [[\"\", \"brnSelectLabel\", \"\"]],\n    features: [i0.ɵɵHostDirectivesFeature([i1.BrnLabelDirective])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectLabelDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[brnSelectLabel]',\n      hostDirectives: [BrnLabelDirective],\n      standalone: true\n    }]\n  }], () => [], null);\n})();\nclass BrnSelectPlaceholderDirective {\n  /** @internale */\n  templateRef = inject(TemplateRef);\n  /** @nocollapse */\n  static ɵfac = function BrnSelectPlaceholderDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnSelectPlaceholderDirective)();\n  };\n  /** @nocollapse */\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BrnSelectPlaceholderDirective,\n    selectors: [[\"\", \"brnSelectPlaceholder\", \"\"], [\"\", \"hlmSelectPlaceholder\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectPlaceholderDirective, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[brnSelectPlaceholder], [hlmSelectPlaceholder]'\n    }]\n  }], null, null);\n})();\nclass BrnSelectTriggerDirective {\n  _elementRef = inject(ElementRef);\n  _select = injectBrnSelect();\n  _ngControl = inject(NgControl, {\n    optional: true\n  });\n  _platform = inject(PLATFORM_ID);\n  _triggerId = computed(() => `${this._select.id()}--trigger`);\n  _contentId = computed(() => `${this._select.id()}--content`);\n  _disabled = computed(() => this._select.disabled() || this._select._formDisabled());\n  _labelledBy = computed(() => {\n    const value = this._select.value();\n    if (Array.isArray(value) && value.length > 0) {\n      return `${this._select.labelId()} ${this._select.id()}--value`;\n    }\n    return this._select.labelId();\n  });\n  _resizeObserver;\n  constructor() {\n    this._select.trigger.set(this);\n  }\n  ngAfterViewInit() {\n    this._select.triggerWidth.set(this._elementRef.nativeElement.offsetWidth);\n    // if we are on the client, listen for element resize events\n    if (isPlatformBrowser(this._platform)) {\n      this._resizeObserver = new ResizeObserver(() => this._select.triggerWidth.set(this._elementRef.nativeElement.offsetWidth));\n      this._resizeObserver.observe(this._elementRef.nativeElement);\n    }\n  }\n  ngOnDestroy() {\n    this._resizeObserver?.disconnect();\n  }\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n  /** @nocollapse */\n  static ɵfac = function BrnSelectTriggerDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnSelectTriggerDirective)();\n  };\n  /** @nocollapse */\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BrnSelectTriggerDirective,\n    selectors: [[\"\", \"brnSelectTrigger\", \"\"]],\n    hostAttrs: [\"type\", \"button\", \"role\", \"combobox\", \"aria-autocomplete\", \"none\"],\n    hostVars: 18,\n    hostBindings: function BrnSelectTriggerDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown.ArrowDown\", function BrnSelectTriggerDirective_keydown_ArrowDown_HostBindingHandler() {\n          return ctx._select.show();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"disabled\", ctx._disabled());\n        i0.ɵɵattribute(\"id\", ctx._triggerId())(\"aria-expanded\", ctx._select.open())(\"aria-controls\", ctx._contentId())(\"aria-labelledBy\", ctx._labelledBy())(\"dir\", ctx._select.dir());\n        i0.ɵɵclassProp(\"ng-invalid\", (ctx._ngControl == null ? null : ctx._ngControl.invalid) || null)(\"ng-dirty\", (ctx._ngControl == null ? null : ctx._ngControl.dirty) || null)(\"ng-valid\", (ctx._ngControl == null ? null : ctx._ngControl.valid) || null)(\"ng-touched\", (ctx._ngControl == null ? null : ctx._ngControl.touched) || null)(\"ng-untouched\", (ctx._ngControl == null ? null : ctx._ngControl.untouched) || null)(\"ng-pristine\", (ctx._ngControl == null ? null : ctx._ngControl.pristine) || null);\n      }\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectTriggerDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[brnSelectTrigger]',\n      standalone: true,\n      host: {\n        type: 'button',\n        role: 'combobox',\n        '[attr.id]': '_triggerId()',\n        '[disabled]': '_disabled()',\n        '[attr.aria-expanded]': '_select.open()',\n        '[attr.aria-controls]': '_contentId()',\n        '[attr.aria-labelledBy]': '_labelledBy()',\n        'aria-autocomplete': 'none',\n        '[attr.dir]': '_select.dir()',\n        '[class.ng-invalid]': '_ngControl?.invalid || null',\n        '[class.ng-dirty]': '_ngControl?.dirty || null',\n        '[class.ng-valid]': '_ngControl?.valid || null',\n        '[class.ng-touched]': '_ngControl?.touched || null',\n        '[class.ng-untouched]': '_ngControl?.untouched || null',\n        '[class.ng-pristine]': '_ngControl?.pristine || null',\n        '(keydown.ArrowDown)': '_select.show()'\n      }\n    }]\n  }], () => [], null);\n})();\nclass BrnSelectValueDirective {\n  /** @internale */\n  templateRef = inject(TemplateRef);\n  /** @nocollapse */\n  static ɵfac = function BrnSelectValueDirective_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnSelectValueDirective)();\n  };\n  /** @nocollapse */\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: BrnSelectValueDirective,\n    selectors: [[\"\", \"brnSelectValue\", \"\"], [\"\", \"hlmSelectValue\", \"\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectValueDirective, [{\n    type: Directive,\n    args: [{\n      standalone: true,\n      selector: '[brnSelectValue], [hlmSelectValue]'\n    }]\n  }], null, null);\n})();\nclass BrnSelectValueComponent {\n  _select = injectBrnSelect();\n  id = computed(() => `${this._select.id()}--value`);\n  placeholder = computed(() => this._select.placeholder());\n  _showPlaceholder = computed(() => this.value() === null || this.value() === undefined || this.value() === '');\n  /** Allow a custom value template */\n  customValueTemplate = contentChild(BrnSelectValueDirective, {\n    descendants: true\n  });\n  customPlaceholderTemplate = contentChild(BrnSelectPlaceholderDirective, {\n    descendants: true\n  });\n  value = computed(() => {\n    const value = this._values();\n    if (value.length === 0) {\n      return null;\n    }\n    // remove any selected values that are not in the options list\n    const existingOptions = value.filter(val => this._select.options().some(option => this._select.compareWith()(option.value(), val)));\n    const selectedOption = existingOptions.map(val => this._select.options().find(option => this._select.compareWith()(option.value(), val)));\n    if (selectedOption.length === 0) {\n      return null;\n    }\n    const selectedLabels = selectedOption.map(option => option?.getLabel());\n    if (this._select.dir() === 'rtl') {\n      selectedLabels.reverse();\n    }\n    return this.transformFn()(selectedLabels);\n  });\n  /** Normalize the values as an array */\n  _values = computed(() => Array.isArray(this._select.value()) ? this._select.value() : [this._select.value()]);\n  transformFn = input(values => (values ?? []).join(', '));\n  /** @nocollapse */\n  static ɵfac = function BrnSelectValueComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnSelectValueComponent)();\n  };\n  /** @nocollapse */\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: BrnSelectValueComponent,\n    selectors: [[\"brn-select-value\"], [\"hlm-select-value\"]],\n    contentQueries: function BrnSelectValueComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuerySignal(dirIndex, ctx.customValueTemplate, BrnSelectValueDirective, 5);\n        i0.ɵɵcontentQuerySignal(dirIndex, ctx.customPlaceholderTemplate, BrnSelectPlaceholderDirective, 5);\n      }\n      if (rf & 2) {\n        i0.ɵɵqueryAdvance(2);\n      }\n    },\n    hostVars: 1,\n    hostBindings: function BrnSelectValueComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵhostProperty(\"id\", ctx.id());\n      }\n    },\n    inputs: {\n      transformFn: [1, \"transformFn\"]\n    },\n    decls: 6,\n    vars: 1,\n    consts: [[\"defaultValueTemplate\", \"\"], [\"defaultPlaceholderTemplate\", \"\"], [3, \"ngTemplateOutlet\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n    template: function BrnSelectValueComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, BrnSelectValueComponent_Conditional_0_Template, 1, 1, \"ng-container\", 2)(1, BrnSelectValueComponent_Conditional_1_Template, 1, 4, \"ng-container\", 3)(2, BrnSelectValueComponent_ng_template_2_Template, 1, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor)(4, BrnSelectValueComponent_ng_template_4_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵconditional(ctx._showPlaceholder() ? 0 : 1);\n      }\n    },\n    dependencies: [NgTemplateOutlet],\n    styles: [\"[_nghost-%COMP%]{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:1;white-space:nowrap;pointer-events:none}\"],\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectValueComponent, [{\n    type: Component,\n    args: [{\n      selector: 'brn-select-value, hlm-select-value',\n      imports: [NgTemplateOutlet],\n      template: `\n\t\t@if (_showPlaceholder()) {\n\t\t\t<ng-container [ngTemplateOutlet]=\"customPlaceholderTemplate()?.templateRef ?? defaultPlaceholderTemplate\" />\n\t\t} @else {\n\t\t\t<ng-container\n\t\t\t\t[ngTemplateOutlet]=\"customValueTemplate()?.templateRef ?? defaultValueTemplate\"\n\t\t\t\t[ngTemplateOutletContext]=\"{ $implicit: _select.value() }\"\n\t\t\t/>\n\t\t}\n\n\t\t<ng-template #defaultValueTemplate>{{ value() }}</ng-template>\n\t\t<ng-template #defaultPlaceholderTemplate>{{ placeholder() }}</ng-template>\n\t`,\n      host: {\n        '[id]': 'id()'\n      },\n      standalone: true,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\":host{display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:1;white-space:nowrap;pointer-events:none}\\n\"]\n    }]\n  }], null, null);\n})();\nlet nextId = 0;\nclass BrnSelectComponent {\n  _defaultErrorStateMatcher = inject(ErrorStateMatcher);\n  _parentForm = inject(NgForm, {\n    optional: true\n  });\n  _injector = inject(Injector);\n  _parentFormGroup = inject(FormGroupDirective, {\n    optional: true\n  });\n  ngControl = inject(NgControl, {\n    optional: true,\n    self: true\n  });\n  id = input(`brn-select-${nextId++}`);\n  multiple = input(false, {\n    transform: booleanAttribute\n  });\n  placeholder = input('');\n  disabled = input(false, {\n    transform: booleanAttribute\n  });\n  dir = input('ltr');\n  closeDelay = input(100, {\n    transform: numberAttribute\n  });\n  open = model(false);\n  value = model();\n  compareWith = input((o1, o2) => o1 === o2);\n  _formDisabled = signal(false);\n  /** Label provided by the consumer. */\n  selectLabel = contentChild(BrnLabelDirective, {\n    descendants: false\n  });\n  /** Overlay pane containing the options. */\n  selectContent = contentChild.required(BrnSelectContentComponent);\n  /** @internal */\n  options = contentChildren(BrnSelectOptionDirective, {\n    descendants: true\n  });\n  /** @internal Derive the selected options to filter out the unselected options */\n  selectedOptions = computed(() => this.options().filter(option => option.selected()));\n  /** Overlay pane containing the options. */\n  _overlayDir = viewChild.required(CdkConnectedOverlay);\n  trigger = signal(null);\n  triggerWidth = signal(0);\n  _delayedExpanded = toSignal(toObservable(this.open).pipe(switchMap(expanded => !expanded ? of(expanded).pipe(delay(this.closeDelay())) : of(expanded)), takeUntilDestroyed()), {\n    initialValue: false\n  });\n  state = computed(() => this.open() ? 'open' : 'closed');\n  _positionChanges$ = new Subject();\n  side = toSignal(this._positionChanges$.pipe(map(change =>\n  // todo: better translation or adjusting hlm to take that into account\n  change.connectionPair.originY === 'center' ? change.connectionPair.originX === 'start' ? 'left' : 'right' : change.connectionPair.originY)), {\n    initialValue: 'bottom'\n  });\n  labelId = computed(() => this.selectLabel()?.id ?? `${this.id()}--label`);\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  _onChange = () => {};\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  _onTouched = () => {};\n  /*\n   * This position config ensures that the top \"start\" corner of the overlay\n   * is aligned with with the top \"start\" of the origin by default (overlapping\n   * the trigger completely). If the panel cannot fit below the trigger, it\n   * will fall back to a position above the trigger.\n   */\n  _positions = [{\n    originX: 'start',\n    originY: 'bottom',\n    overlayX: 'start',\n    overlayY: 'top'\n  }, {\n    originX: 'end',\n    originY: 'bottom',\n    overlayX: 'end',\n    overlayY: 'top'\n  }, {\n    originX: 'start',\n    originY: 'top',\n    overlayX: 'start',\n    overlayY: 'bottom'\n  }, {\n    originX: 'end',\n    originY: 'top',\n    overlayX: 'end',\n    overlayY: 'bottom'\n  }];\n  errorStateTracker;\n  errorState = computed(() => this.errorStateTracker.errorState());\n  constructor() {\n    if (this.ngControl !== null) {\n      this.ngControl.valueAccessor = this;\n    }\n    this.errorStateTracker = new ErrorStateTracker(this._defaultErrorStateMatcher, this.ngControl, this._parentFormGroup, this._parentForm);\n  }\n  ngDoCheck() {\n    this.errorStateTracker.updateErrorState();\n  }\n  toggle() {\n    if (this.open()) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  show() {\n    if (this.open() || this.disabled() || this._formDisabled() || this.options()?.length == 0) {\n      return;\n    }\n    this.open.set(true);\n    afterNextRender(() => this.selectContent().focusList(), {\n      injector: this._injector\n    });\n  }\n  hide() {\n    if (!this.open()) return;\n    this.open.set(false);\n    this._onTouched();\n    // restore focus to the trigger\n    this.trigger()?.focus();\n  }\n  writeValue(value) {\n    this.value.set(value);\n  }\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  setDisabledState(isDisabled) {\n    this._formDisabled.set(isDisabled);\n  }\n  selectOption(value) {\n    // if this is a multiple select we need to add the value to the array\n    if (this.multiple()) {\n      const currentValue = this.value();\n      const newValue = currentValue ? [...currentValue, value] : [value];\n      this.value.set(newValue);\n    } else {\n      this.value.set(value);\n    }\n    this._onChange?.(this.value());\n    // if this is single select close the dropdown\n    if (!this.multiple()) {\n      this.hide();\n    }\n  }\n  deselectOption(value) {\n    if (this.multiple()) {\n      const currentValue = this.value();\n      const newValue = currentValue.filter(val => !this.compareWith()(val, value));\n      this.value.set(newValue);\n    } else {\n      this.value.set(null);\n    }\n    this._onChange?.(this.value());\n  }\n  toggleSelect(value) {\n    if (this.isSelected(value)) {\n      this.deselectOption(value);\n    } else {\n      this.selectOption(value);\n    }\n  }\n  isSelected(value) {\n    const selection = this.value();\n    if (Array.isArray(selection)) {\n      return selection.some(val => this.compareWith()(val, value));\n    } else if (value !== undefined) {\n      return this.compareWith()(selection, value);\n    }\n    return false;\n  }\n  /** @nocollapse */\n  static ɵfac = function BrnSelectComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnSelectComponent)();\n  };\n  /** @nocollapse */\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: BrnSelectComponent,\n    selectors: [[\"brn-select\"], [\"hlm-select\"]],\n    contentQueries: function BrnSelectComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuerySignal(dirIndex, ctx.selectLabel, BrnLabelDirective, 4);\n        i0.ɵɵcontentQuerySignal(dirIndex, ctx.selectContent, BrnSelectContentComponent, 5);\n        i0.ɵɵcontentQuerySignal(dirIndex, ctx.options, BrnSelectOptionDirective, 5);\n      }\n      if (rf & 2) {\n        i0.ɵɵqueryAdvance(3);\n      }\n    },\n    viewQuery: function BrnSelectComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuerySignal(ctx._overlayDir, CdkConnectedOverlay, 5);\n      }\n      if (rf & 2) {\n        i0.ɵɵqueryAdvance();\n      }\n    },\n    inputs: {\n      id: [1, \"id\"],\n      multiple: [1, \"multiple\"],\n      placeholder: [1, \"placeholder\"],\n      disabled: [1, \"disabled\"],\n      dir: [1, \"dir\"],\n      closeDelay: [1, \"closeDelay\"],\n      open: [1, \"open\"],\n      value: [1, \"value\"],\n      compareWith: [1, \"compareWith\"]\n    },\n    outputs: {\n      open: \"openChange\",\n      value: \"valueChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([provideExposedSideProviderExisting(() => BrnSelectComponent), provideExposesStateProviderExisting(() => BrnSelectComponent), provideBrnSelect(BrnSelectComponent), {\n      provide: BrnFormFieldControl,\n      useExisting: BrnSelectComponent\n    }])],\n    ngContentSelectors: _c5,\n    decls: 6,\n    vars: 5,\n    consts: [[\"trigger\", \"cdkOverlayOrigin\"], [1, \"hidden\"], [\"cdk-overlay-origin\", \"\", 3, \"click\"], [\"cdk-connected-overlay\", \"\", \"cdkConnectedOverlayLockPosition\", \"\", \"cdkConnectedOverlayHasBackdrop\", \"\", \"cdkConnectedOverlayBackdropClass\", \"cdk-overlay-transparent-backdrop\", 3, \"backdropClick\", \"detach\", \"positionChange\", \"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayWidth\"]],\n    template: function BrnSelectComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef(_c4);\n        i0.ɵɵtemplate(0, BrnSelectComponent_Conditional_0_Template, 2, 2, \"label\", 1)(1, BrnSelectComponent_Conditional_1_Template, 1, 0);\n        i0.ɵɵelementStart(2, \"div\", 2, 0);\n        i0.ɵɵlistener(\"click\", function BrnSelectComponent_Template_div_click_2_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.toggle());\n        });\n        i0.ɵɵprojection(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, BrnSelectComponent_ng_template_5_Template, 1, 0, \"ng-template\", 3);\n        i0.ɵɵlistener(\"backdropClick\", function BrnSelectComponent_Template_ng_template_backdropClick_5_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.hide());\n        })(\"detach\", function BrnSelectComponent_Template_ng_template_detach_5_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx.hide());\n        })(\"positionChange\", function BrnSelectComponent_Template_ng_template_positionChange_5_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._positionChanges$.next($event));\n        });\n      }\n      if (rf & 2) {\n        const trigger_r3 = i0.ɵɵreference(3);\n        i0.ɵɵconditional(!ctx.selectLabel() && ctx.placeholder() ? 0 : 1);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"cdkConnectedOverlayOrigin\", trigger_r3)(\"cdkConnectedOverlayOpen\", ctx._delayedExpanded())(\"cdkConnectedOverlayPositions\", ctx._positions)(\"cdkConnectedOverlayWidth\", ctx.triggerWidth() > 0 ? ctx.triggerWidth() : \"auto\");\n      }\n    },\n    dependencies: [OverlayModule, i1$1.CdkConnectedOverlay, i1$1.CdkOverlayOrigin, CdkListboxModule],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectComponent, [{\n    type: Component,\n    args: [{\n      selector: 'brn-select, hlm-select',\n      imports: [OverlayModule, CdkListboxModule],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [provideExposedSideProviderExisting(() => BrnSelectComponent), provideExposesStateProviderExisting(() => BrnSelectComponent), provideBrnSelect(BrnSelectComponent), {\n        provide: BrnFormFieldControl,\n        useExisting: BrnSelectComponent\n      }],\n      template: `\n\t\t@if (!selectLabel() && placeholder()) {\n\t\t\t<label class=\"hidden\" [attr.id]=\"labelId()\">{{ placeholder() }}</label>\n\t\t} @else {\n\t\t\t<ng-content select=\"label[hlmLabel],label[brnLabel]\" />\n\t\t}\n\n\t\t<div cdk-overlay-origin (click)=\"toggle()\" #trigger=\"cdkOverlayOrigin\">\n\t\t\t<ng-content select=\"hlm-select-trigger,[brnSelectTrigger]\" />\n\t\t</div>\n\n\t\t<ng-template\n\t\t\tcdk-connected-overlay\n\t\t\tcdkConnectedOverlayLockPosition\n\t\t\tcdkConnectedOverlayHasBackdrop\n\t\t\tcdkConnectedOverlayBackdropClass=\"cdk-overlay-transparent-backdrop\"\n\t\t\t[cdkConnectedOverlayOrigin]=\"trigger\"\n\t\t\t[cdkConnectedOverlayOpen]=\"_delayedExpanded()\"\n\t\t\t[cdkConnectedOverlayPositions]=\"_positions\"\n\t\t\t[cdkConnectedOverlayWidth]=\"triggerWidth() > 0 ? triggerWidth() : 'auto'\"\n\t\t\t(backdropClick)=\"hide()\"\n\t\t\t(detach)=\"hide()\"\n\t\t\t(positionChange)=\"_positionChanges$.next($event)\"\n\t\t>\n\t\t\t<ng-content />\n\t\t</ng-template>\n\t`\n    }]\n  }], () => [], null);\n})();\nconst BrnSelectImports = [BrnSelectComponent, BrnSelectContentComponent, BrnSelectTriggerDirective, BrnSelectOptionDirective, BrnSelectValueComponent, BrnSelectScrollDownDirective, BrnSelectScrollUpDirective, BrnSelectGroupDirective, BrnSelectLabelDirective, BrnSelectValueDirective, BrnSelectPlaceholderDirective];\nclass BrnSelectModule {\n  /** @nocollapse */static ɵfac = function BrnSelectModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BrnSelectModule)();\n  };\n  /** @nocollapse */\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: BrnSelectModule,\n    imports: [BrnSelectComponent, BrnSelectContentComponent, BrnSelectTriggerDirective, BrnSelectOptionDirective, BrnSelectValueComponent, BrnSelectScrollDownDirective, BrnSelectScrollUpDirective, BrnSelectGroupDirective, BrnSelectLabelDirective, BrnSelectValueDirective, BrnSelectPlaceholderDirective],\n    exports: [BrnSelectComponent, BrnSelectContentComponent, BrnSelectTriggerDirective, BrnSelectOptionDirective, BrnSelectValueComponent, BrnSelectScrollDownDirective, BrnSelectScrollUpDirective, BrnSelectGroupDirective, BrnSelectLabelDirective, BrnSelectValueDirective, BrnSelectPlaceholderDirective]\n  });\n  /** @nocollapse */\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [BrnSelectComponent]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BrnSelectModule, [{\n    type: NgModule,\n    args: [{\n      imports: [...BrnSelectImports],\n      exports: [...BrnSelectImports]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrnSelectComponent, BrnSelectContentComponent, BrnSelectGroupDirective, BrnSelectImports, BrnSelectLabelDirective, BrnSelectModule, BrnSelectOptionDirective, BrnSelectPlaceholderDirective, BrnSelectScrollDownDirective, BrnSelectScrollUpDirective, BrnSelectTriggerDirective, BrnSelectValueComponent, BrnSelectValueDirective };\n"],
  "mappings": "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",
  "names": []
}
